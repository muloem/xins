<?xml version="1.0" encoding="UTF-8"?>
<project name="xins-macros" basedir=".">

	<target name="-load-properties" depends="-load-properties-xins">
		<property file="${project_home}/build.properties" />
		<property name="project_file"	value="${project_home}/xins-project.xml" />
		<property name="xmlenc_version"	value="0.52" />
		<property name="reload.stylesheet" value="false" />
	</target>

	<target name="clean" unless="no.clean" description="Removes all generated files">
		<delete dir="${builddir}" />
	</target>

	<target name="check-version" depends="-load-properties">
		<condition property="no.clean">
			<equals arg1="${xins.current.version}" arg2="${xins_version}" />
		</condition>
		<antcall target="clean" />
	</target>

	<target name="version" depends="-load-properties" description="Prints current versions of Java, Ant and XINS">
		<ant
		antfile="build.xml"
		dir="${xins_home}"
		target="version"
		inheritall="false" />
		<echo>This build file was generated with XINS ${xins_version}</echo>
	</target>

	<target name="help" depends="version" description="Shows the supported commands.">
		<echo><![CDATA[Generic targets:
- version             Prints the version of XINS.
- help                Prints this message.
- all                 Generates everything.
- clean               Removes all generated files.
- specdocs            Generates all specification docs.
- javadoc-apis        Generates all APIs Javadoc.
- wars                Generates all WAR files.
- capis               Generates all CAPI JAR files.
- javadoc-capis       Generates all CAPI Javadoc.
- tests               Runs the unit tests of the APIs.
- tools               Display the help for the tools commands.

The following commands assist in authoring specifications:
- create-api          Generates a new api specification file.
- create-function     Generates a new function specification file.
- create-rcd          Generates a new error code specification file
- create-type         Generates a new type specification file.
- create-example      Generates a new example for a function.
- create-logdoc       Generates the basic logdoc files for an API.

The following commands can be used to run a tool on an API:
download-tools, java2html, pmd, checkstyle, coverage, emma,
findbugs, lint4j, jdepend, cvschangelog, jmeter, run-jmeter,
maven, eclipse, smd, xsd-to-types, wsdl-to-api.
More information is available using the 'help-tools' target.

The following targets are specific for a single API,
replace <api> with the name of an existing API:
- run-<api>           Runs the WAR file for the API.
- war-<api>           Creates the WAR file for the API.
- specdocs-<api>      Generates all specification docs for the API.
- javadoc-api-<api>   Generates Javadoc for the server API
                      implementation.
- server-<api>        Generates the WAR file, the API Javadoc for
                      the server side and the specdocs for the API.
- jar-<api>           Generates and compiles the CAPI classes.
- javadoc-capi-<api>  Generates the Javadoc for the CAPI classes.
- client-<api>        Generates the CAPI JAR file and the
                      corresponding Javadoc.
- clean-<api>         Cleans everything for the API.
- rebuild-<api>       Regenerates everything for the API.
- all-<api>           Generates everything for the API.
- wsdl-<api>          Generates the WSDL for the API.
- stub-<api>          Generates the stub for the API.
- test-<api>          Generates (if needed) and runs the tests.
- javadoc-test-<api>  Generates the Javadoc of the unit tests.
- opendoc-<api>       Generates the specification in Opendoc format

APIs in this project are:
${apis.list}]]></echo>
	</target>
    
	<target name="ask" depends="-load-properties" description="Asks for the command and API to execute.">
		<input addproperty="command"
		       message="Command "
		       validargs="run,war,specdocs,javadoc-api,jar,javadoc-capi,all,clean,client,server,wsdl,stub,test" />
		<input addproperty="api.name"
		       message="API "
		       validargs="${apis.list}">
		</input>
		<property name="api.name" value="" />
		<xins target="${command}" api="${api.name}" />
	</target>

	<target name="-load-dtds">
		<xmlcatalog id="all-dtds">
			<classpath>
				<pathelement path="${xins_home}/src/dtd"/>
			</classpath>
			<dtd publicId="-//XINS//DTD XINS Project 1.0//EN"
			     location="xins-project_1_0.dtd" />
			<dtd publicId="-//XINS//DTD XINS API 1.0//EN"
			     location="api_1_0.dtd" />
			<dtd publicId="-//XINS//DTD Function 1.0//EN"
			     location="function_1_0.dtd" />
			<dtd publicId="-//XINS//DTD Type 1.0//EN"
			     location="type_1_0.dtd" />
			<dtd publicId="-//XINS//DTD Result Code 1.0//EN"
			     location="resultcode_1_0.dtd" />
			<dtd publicId="-//XINS//DTD Implementation 1.0//EN"
			     location="impl_1_0.dtd" />
			<dtd publicId="-//XINS//DTD Environments 1.0//EN"
			     location="environments_1_0.dtd" />
			<dtd publicId="-//XINS//DTD XINS Logdoc 1.0//EN"
			     location="log_1_0.dtd" />
			<dtd publicId="-//XINS//DTD XINS Translation Bundle 1.0//EN"
			     location="translation-bundle_1_0.dtd" />

			<dtd publicId="-//XINS//DTD XINS Project 1.1//EN"
			     location="xins-project_1_1.dtd" />
			<dtd publicId="-//XINS//DTD XINS API 1.1//EN"
			     location="api_1_1.dtd" />
			<dtd publicId="-//XINS//DTD Function 1.1//EN"
			     location="function_1_1.dtd" />
			<dtd publicId="-//XINS//DTD Type 1.1//EN"
			     location="type_1_1.dtd" />
			<dtd publicId="-//XINS//DTD Result Code 1.1//EN"
			     location="resultcode_1_1.dtd" />
			<dtd publicId="-//XINS//DTD Implementation 1.1//EN"
			     location="impl_1_1.dtd" />
			<dtd publicId="-//XINS//DTD Environments 1.1//EN"
			     location="environments_1_1.dtd" />
			<dtd publicId="-//XINS//DTD XINS Logdoc 1.1//EN"
			     location="log_1_1.dtd" />
			<dtd publicId="-//XINS//DTD XINS Translation Bundle 1.1//EN"
			     location="translation-bundle_1_1.dtd" />

			<dtd publicId="-//XINS//DTD XINS Project 1.2//EN"
			     location="xins-project_1_2.dtd" />
			<dtd publicId="-//XINS//DTD XINS API 1.2//EN"
			     location="api_1_2.dtd" />
			<dtd publicId="-//XINS//DTD Function 1.2//EN"
			     location="function_1_2.dtd" />
			<dtd publicId="-//XINS//DTD Type 1.2//EN"
			     location="type_1_2.dtd" />
			<dtd publicId="-//XINS//DTD Result Code 1.2//EN"
			     location="resultcode_1_2.dtd" />
			<dtd publicId="-//XINS//DTD Implementation 1.2//EN"
			     location="impl_1_2.dtd" />
			<dtd publicId="-//XINS//DTD Environments 1.2//EN"
			     location="environments_1_2.dtd" />
			<dtd publicId="-//XINS//DTD XINS Logdoc 1.2//EN"
			     location="log_1_2.dtd" />
			<dtd publicId="-//XINS//DTD XINS Translation Bundle 1.2//EN"
			     location="translation-bundle_1_2.dtd" />

			<dtd publicId="-//XINS//DTD XINS Project 1.3//EN"
			     location="xins-project_1_3.dtd" />
			<dtd publicId="-//XINS//DTD XINS API 1.3//EN"
			     location="api_1_3.dtd" />
			<dtd publicId="-//XINS//DTD Function 1.3//EN"
			     location="function_1_3.dtd" />
			<dtd publicId="-//XINS//DTD Category 1.3//EN"
			     location="category_1_3.dtd" />
			<dtd publicId="-//XINS//DTD Type 1.3//EN"
			     location="type_1_3.dtd" />
			<dtd publicId="-//XINS//DTD Result Code 1.3//EN"
			     location="resultcode_1_3.dtd" />
			<dtd publicId="-//XINS//DTD Implementation 1.3//EN"
			     location="impl_1_3.dtd" />
			<dtd publicId="-//XINS//DTD Environments 1.3//EN"
			     location="environments_1_3.dtd" />
			<dtd publicId="-//XINS//DTD XINS Logdoc 1.3//EN"
			     location="log_1_3.dtd" />
			<dtd publicId="-//XINS//DTD XINS Translation Bundle 1.3//EN"
			     location="translation-bundle_1_3.dtd" />

			<dtd publicId="-//XINS//DTD XINS Project 1.4//EN"
			     location="xins-project_1_4.dtd" />
			<dtd publicId="-//XINS//DTD XINS API 1.4//EN"
			     location="api_1_4.dtd" />
			<dtd publicId="-//XINS//DTD Function 1.4//EN"
			     location="function_1_4.dtd" />
			<dtd publicId="-//XINS//DTD Category 1.4//EN"
			     location="category_1_4.dtd" />
			<dtd publicId="-//XINS//DTD Type 1.4//EN"
			     location="type_1_4.dtd" />
			<dtd publicId="-//XINS//DTD Result Code 1.4//EN"
			     location="resultcode_1_4.dtd" />
			<dtd publicId="-//XINS//DTD Implementation 1.4//EN"
			     location="impl_1_4.dtd" />
			<dtd publicId="-//XINS//DTD Environments 1.4//EN"
			     location="environments_1_4.dtd" />
			<dtd publicId="-//XINS//DTD XINS Logdoc 1.4//EN"
			     location="log_1_4.dtd" />
			<dtd publicId="-//XINS//DTD XINS Translation Bundle 1.4//EN"
			     location="translation-bundle_1_4.dtd" />

			<dtd publicId="-//XINS//DTD XINS Project 1.5//EN"
			     location="xins-project_1_5.dtd" />
			<dtd publicId="-//XINS//DTD XINS API 1.5//EN"
			     location="api_1_5.dtd" />
			<dtd publicId="-//XINS//DTD Function 1.5//EN"
			     location="function_1_5.dtd" />
			<dtd publicId="-//XINS//DTD Category 1.5//EN"
			     location="category_1_5.dtd" />
			<dtd publicId="-//XINS//DTD Type 1.5//EN"
			     location="type_1_5.dtd" />
			<dtd publicId="-//XINS//DTD Result Code 1.5//EN"
			     location="resultcode_1_5.dtd" />
			<dtd publicId="-//XINS//DTD Implementation 1.5//EN"
			     location="impl_1_5.dtd" />
			<dtd publicId="-//XINS//DTD Environments 1.5//EN"
			     location="environments_1_5.dtd" />
			<dtd publicId="-//XINS//DTD XINS Logdoc 1.5//EN"
			     location="log_1_5.dtd" />
			<dtd publicId="-//XINS//DTD XINS Translation Bundle 1.5//EN"
			     location="translation-bundle_1_5.dtd" />

			<dtd publicId="-//XINS//DTD XINS Project 2.0//EN"
			     location="xins-project_2_0.dtd" />
			<dtd publicId="-//XINS//DTD XINS API 2.0//EN"
			     location="api_2_0.dtd" />
			<dtd publicId="-//XINS//DTD Function 2.0//EN"
			     location="function_2_0.dtd" />
			<dtd publicId="-//XINS//DTD Category 2.0//EN"
			     location="category_2_0.dtd" />
			<dtd publicId="-//XINS//DTD Type 2.0//EN"
			     location="type_2_0.dtd" />
			<dtd publicId="-//XINS//DTD Result Code 2.0//EN"
			     location="resultcode_2_0.dtd" />
			<dtd publicId="-//XINS//DTD Implementation 2.0//EN"
			     location="impl_2_0.dtd" />
			<dtd publicId="-//XINS//DTD Environments 2.0//EN"
			     location="environments_2_0.dtd" />
			<dtd publicId="-//XINS//DTD XINS Logdoc 2.0//EN"
			     location="log_2_0.dtd" />
			<dtd publicId="-//XINS//DTD XINS Translation Bundle 2.0//EN"
			     location="translation-bundle_2_0.dtd" />

			<dtd publicId="-//XINS//DTD XINS Project 2.1//EN"
			     location="xins-project_2_1.dtd" />
			<dtd publicId="-//XINS//DTD XINS API 2.1//EN"
			     location="api_2_1.dtd" />
			<dtd publicId="-//XINS//DTD Function 2.1//EN"
			     location="function_2_1.dtd" />
			<dtd publicId="-//XINS//DTD Category 2.1//EN"
			     location="category_2_1.dtd" />
			<dtd publicId="-//XINS//DTD Type 2.1//EN"
			     location="type_2_1.dtd" />
			<dtd publicId="-//XINS//DTD Result Code 2.1//EN"
			     location="resultcode_2_1.dtd" />
			<dtd publicId="-//XINS//DTD Implementation 2.1//EN"
			     location="impl_2_1.dtd" />
			<dtd publicId="-//XINS//DTD Environments 2.1//EN"
			     location="environments_2_1.dtd" />
			<dtd publicId="-//XINS//DTD XINS Logdoc 2.1//EN"
			     location="log_2_1.dtd" />
			<dtd publicId="-//XINS//DTD XINS Translation Bundle 2.1//EN"
			     location="translation-bundle_2_1.dtd" />
		</xmlcatalog>
	</target>

	<target name="index-specdocs" depends="-load-properties, -load-dtds" description="Generates the API index">
		<mkdir dir="${builddir}/specdocs" />
		<xmlvalidate file="${project_file}" warn="false">
			<xmlcatalog refid="all-dtds" />
		</xmlvalidate>
		<xslt
		in="${project_file}"
		out="${builddir}/specdocs/index.html"
		style="${xins_home}/src/xslt/specdocs/xins-project_to_index.xslt">
			<xmlcatalog refid="all-dtds" />
			<param name="xins_version" expression="${xins_version}" />
			<param name="project_home" expression="${project_home}" />
			<param name="project_file" expression="${project_file}" />
		</xslt>
		<copy todir="${builddir}/specdocs" file="${xins_home}/src/css/specdocs/style.css" />
		<copy tofile="${builddir}/specdocs/favicon.ico" file="${xins_home}/xins.ico" />
	</target>

	<target name="-load-version" depends="-load-properties">
		<property prefix="api." file="${project_home}/.version.properties" />
		<condition property="api.version" value="${api.version.major}.${api.version.minor}">
			<isset property="api.version.major" />
		</condition>
		<property name="api.version" value="Not specified" />
	</target>

	<target name="-prepare-classes" depends="-load-properties,-load-dtds">
		<!-- If not set by the user set the default properties. -->
		<property name="build.deprecation" value="true" />
		<property name="build.java.version" value="${ant.java.version}" />
		<condition property="build.generics">
			<and>
				<not>
					<equals arg1="${build.java.version}" arg2="1.3" />
				</not>
				<not>
					<equals arg1="${build.java.version}" arg2="1.4" />
				</not>
			</and>
		</condition>
		<path id="xins.classpath">
			<pathelement path="${xins_home}/build/logdoc.jar" />
			<pathelement path="${xins_home}/build/xins-common.jar" />
			<pathelement path="${xins_home}/build/xins-server.jar" />
			<pathelement path="${xins_home}/build/xins-client.jar" />
			<fileset dir="${xins_home}/lib" includes="**/*.jar" />
		</path>
	</target>

	<target name="-clean" depends="-load-properties">
		<delete dir="${builddir}/capis/${api}-capi.jar" />
		<delete dir="${builddir}/classes-api/${api}" />
		<delete dir="${builddir}/classes-capi/${api}" />
		<delete dir="${builddir}/classes-types/${api}" />
		<delete dir="${builddir}/classes-tests/${api}" />
		<delete dir="${builddir}/java-capi/${api}" />
		<delete dir="${builddir}/java-fundament/${api}" />
		<delete dir="${builddir}/java-types/${api}" />
		<delete dir="${builddir}/javadoc-api/${api}" />
		<delete dir="${builddir}/javadoc-capi/${api}" />
		<delete dir="${builddir}/logdoc/${api}" />
		<delete dir="${builddir}/specdocs/${api}" />
		<delete dir="${builddir}/types/${api}" />
		<delete dir="${builddir}/webapps/${api}" />
		<delete file="${builddir}/wsdl/${api}.wsdl" />
	</target>

	<target name="-clean-impl" depends="-load-properties">
		<delete dir="${builddir}/classes-api/${api}-${impl}" />
		<delete dir="${builddir}/java-fundament/${api}-${impl}" />
		<delete dir="${builddir}/javadoc-api/${api}-${impl}" />
		<delete dir="${builddir}/logdoc/${api}-${impl}" />
		<delete dir="${builddir}/webapps/${api}-${impl}" />
		<delete dir="${builddir}/logdoc/${api}-${impl}" />
	</target>

	<target name="-client" depends="-load-properties">
		<zip destfile="${builddir}/specdocs/${api}/${api}-client.zip">
			<fileset dir="${builddir}/capis" includes="${api}-capi.jar" />
			<zipfileset dir="${builddir}/javadoc-capi/${api}" prefix="javadoc" />
			<zipfileset dir="${builddir}/specdocs/${api}" excludes="${api}-client.zip" prefix="specdocs" />
			<fileset dir="${builddir}/opendoc/${api}" includes="${api}-specs.odt" />
			<fileset dir="${builddir}/wsdl" includes="${api}.wsdl" />
		</zip>
	</target>

	<target name="-javadoc-capi">
		<mkdir dir="${builddir}/javadoc-capi/${api}" />
		<javadoc
		sourcepath="${builddir}/java-capi/${api}"
		destdir="${builddir}/javadoc-capi/${api}"
		version="yes"
		use="yes"
		author="yes"
		access="public"
		windowtitle="Call interface for ${api} API"
		doctitle="Call interface for ${api} API">
			<packageset refid="javadoc.capi.packages" />
			<link
			href="http://www.xins.org/javadoc/${xins_version}/"
			offline="true"
			packagelistloc="${xins_home}/docs/javadoc/" />
			<link
			href="http://java.sun.com/j2se/1.4.2/docs/api"
			offline="true"
			packagelistloc="${xins_home}/src/package-lists/j2se/" />
			<link
			href="http://jakarta.apache.org/log4j/docs/api/"
			offline="true"
			packagelistloc="${xins_home}/src/package-lists/log4j/" />
			<link
			href="http://xmlenc.sourceforge.net/javadoc/${xmlenc_version}/"
			offline="true"
			packagelistloc="${xins_home}/src/package-lists/xmlenc/" />
			<classpath>
				<path refid="xins.classpath" />
			</classpath>
		</javadoc>
		<copy
		file="${xins_home}/src/css/javadoc/style.css"
		tofile="${builddir}/javadoc-capi/${api}/stylesheet.css"
		overwrite="true" />
	</target>

	<target name="-run">
		<property name="org.xins.server.config" value="" />
		<property name="servlet.port" value="8080" />
		<java classname="org.xins.common.servlet.container.HTTPServletStarter"
					fork="true">
			<jvmarg value="-Dorg.xins.server.config=${org.xins.server.config}" />
			<jvmarg value="-Dcom.sun.management.jmxremote" />
			<jvmarg value="-Dcom.sun.management.jmxremote.port=1090"/>
			<jvmarg value="-Dcom.sun.management.jmxremote.authenticate=false"/>
			<jvmarg value="-Dcom.sun.management.jmxremote.ssl=false"/>
			<arg path="${builddir}/webapps/${api}${implName2}/${api}${implName2}.war" />
			<arg value="${servlet.port}" />
			<classpath>
				<path refid="xins.classpath" />
				<path refid="run.classpath" />
			</classpath>
		</java>
	</target>

	<target name="-javadoc-test" depends="-load-properties">
		<property name="javaTestDir" value="${xins_home}/apis/${api}/test" />
		<javadoc
		destdir="${builddir}/javadoc-test/${api}"
		version="yes"
		use="yes"
		author="yes"
		access="package"
		windowtitle="Unit tests of the ${api} API"
		doctitle="Unit tests of the ${api} API">
			<packageset dir="${javaTestDir}" />
			<link
			href="http://www.xins.org/javadoc/${xins_version}/"
			offline="true"
			packagelistloc="${xins_home}/docs/javadoc/" />
			<link
			href="http://java.sun.com/j2se/1.4.2/docs/api"
			offline="true"
			packagelistloc="${xins_home}/src/package-lists/j2se/" />
			<link
			href="http://junit.sourceforge.net/javadoc/"
			offline="true"
			packagelistloc="${xins_home}/src/package-lists/junit/" />
			<link
			href="http://jakarta.apache.org/log4j/docs/api/"
			offline="true"
			packagelistloc="${xins_home}/src/package-lists/log4j/" />
			<link
			href="http://xmlenc.sourceforge.net/javadoc/${xmlenc_version}/"
			offline="true"
			packagelistloc="${xins_home}/src/package-lists/xmlenc/" />
			<classpath>
				<path refid="xins.classpath" />
				<path refid="javadoc.test.classpath" />
				<pathelement path="${builddir}/capis/${api}-capi.jar" />
				<pathelement path="${classes.api.dir}" />
				<pathelement path="${builddir}/classes-tests/${api}" />
				<fileset dir="${project_home}/apis/${api}/test" includes="**/*.jar" />
			</classpath>
		</javadoc>
		<copy
		file="${xins_home}/src/css/javadoc/style.css"
		tofile="${builddir}/javadoc-test/${api}/stylesheet.css"
		overwrite="true" />
	</target>

	<target name="-opendoc">
		<mkdir dir="${builddir}/opendoc/${api}" />
		<dependset>
			<srcfilelist refid="all.dependset" />
			<targetfileset dir="${builddir}/opendoc/${api}" includes="content.xml" />
		</dependset>
		<xslt
		in="${api_specsdir}/api.xml"
		out="${builddir}/opendoc/${api}/content.xml"
		style="${xins_home}/src/xslt/opendoc/api_to_content.xslt">
			<xmlcatalog refid="all-dtds" />
			<param name="project_home" expression="${project_home}" />
			<param name="project_file" expression="${project_file}" />
			<param name="specsdir"     expression="${api_specsdir}" />
			<param name="api"          expression="${api}"          />
		</xslt>
		<copy file="${xins_home}/src/opendoc/meta.xml" tofile="${builddir}/opendoc/${api}/meta.xml" />
		<tstamp>
			<format property="timestamp" pattern="yyyy-MM-dd'T'HH:mm:ss" />
		</tstamp>
		<replace file="${builddir}/opendoc/${api}/meta.xml">
			<replacefilter token="#version#" value="${xins_version}" />
			<replacefilter token="#date#" value="${timestamp}" />
		</replace>
		<zip destfile="${builddir}/opendoc/${api}/${api}-specs.odt">
			<fileset dir="${builddir}/opendoc/${api}" includes="content.xml meta.xml" />
			<fileset dir="${xins_home}/src/opendoc" includes="mimetype styles.xml" />
			<zipfileset dir="${xins_home}/src/opendoc" includes="manifest.xml" prefix="META-INF" />
		</zip>
	</target>

	<target name="-javadoc-api">
		<property file="${xins_home}/.version.properties" />
		<condition property="dot.version.minor" value="${version.minor}">
			<or>
				<equals arg1="${version.minor}" arg2="-alpha" />
				<equals arg1="${version.minor}" arg2="-beta" />
				<equals arg1="${version.minor}" arg2="-rc" />
				<equals arg1="${version.minor}" arg2="" />
			</or>
		</condition>
		<property name="dot.version.minor" value=".${version.minor}" />
		<mkdir dir="${builddir}/javadoc-api/${api}${implName2}" />
		<javadoc
		destdir="${builddir}/javadoc-api/${api}${implName2}"
		version="yes"
		use="yes"
		author="yes"
		access="package"
		windowtitle="Implementation of ${api} API"
		doctitle="Implementation of ${api} API">
			<packageset refid="javadoc.api.packageset" />
			<link
			href="http://www.xins.org/javadoc/${version.major}.${version.middle}${dot.version.minor}${version.build}/"
			offline="true"
			packagelistloc="${xins_home}/docs/javadoc/" />
			<link
			href="http://java.sun.com/j2se/1.4.2/docs/api"
			offline="true"
			packagelistloc="${xins_home}/src/package-lists/j2se/" />
			<link
			href="http://jakarta.apache.org/log4j/docs/api/"
			offline="true"
			packagelistloc="${xins_home}/src/package-lists/log4j/" />
			<link
			href="http://xmlenc.sourceforge.net/javadoc/${xmlenc_version}/"
			offline="true"
			packagelistloc="${xins_home}/src/package-lists/xmlenc/" />
			<classpath refid="javadoc.api.classpath" />
		</javadoc>
		<copy
		file="${xins_home}/src/css/javadoc/style.css"
		tofile="${builddir}/javadoc-api/${api}/stylesheet.css"
		overwrite="true" />
	</target>

	<target name="-wsdl" depends="-load-dtds">
		<dependset>
			<srcfilelist refid="all.dependset" />
			<targetfileset dir="${builddir}/wsdl" includes="${api}.wsdl" />
		</dependset>
		<property name="wsdl.endpoint" value="" />
		<mkdir dir="${builddir}/wsdl" />
		<tstamp>
			<format property="timestamp" pattern="yyyy.MM.dd HH:mm:ss.SS" />
		</tstamp>
		<xslt
		in="${api_specsdir}/api.xml"
		out="${builddir}/wsdl/${api}.wsdl"
		style="${xins_home}/src/xslt/webapp/api_to_wsdl.xslt">
			<xmlcatalog refid="all-dtds" />
			<param name="project_home" expression="${project_home}" />
			<param name="project_file" expression="${project_file}" />
			<param name="specsdir"     expression="${api_specsdir}" />
			<param name="endpoint"     expression="${wsdl.endpoint}" />
			<param name="xins_version" expression="${xins_version}" />
			<param name="timestamp"    expression="${timestamp}"  />
		</xslt>
		<replace file="${builddir}/wsdl/${api}.wsdl">
			<replacefilter token="urn:apiname" value="urn:${api}" />
			<replacefilter token="//?_convention=_xins-soap" value="/?_convention=_xins-soap" />
		</replace>
	</target>
</project>
