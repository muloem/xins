This file contains a detailed explanation of the changes between individual
versions of XINS.

$Id$

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.1.0 ALPHA 6:

* XINS/Java Server Framework:
  - Improved initialization of the APIServlet: Setting the cause on a
    ServletException if appropriate.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.1.0 ALPHA 5:

* XINS/Java Common Library:
  - Changed some classes to throw a ProgrammingError instead of an Error, if
    appropriate.
  - Extended tests in ServiceCaller class to make sure the implementation is
    implementing the correct methods.
  - Fixed SF.net bug #1079069. The first line of the class description was:
    "Abstractgion of a manageanble object". Fixed those 2 typos.
  - Moved some unit tests for org.xins.common packages from
    org.xins.tests.common.util to org.xins.tests.common.
  - Extended test set for class TargetDescriptor.
  - Changed pattern: removed obsolete escapes; changed 0-9 range into \d;
    changed [a-zA-Z] range into [a-z], using the Perl5Compiler.CASE_INSENSITIVE_MASK
    in the call to the Perl5Compiler.compile() method instead to enable case-
    insensitive matches.

* XINS/Java Client Framework:
  - Changed some classes to throw a ProgrammingError instead of an Error, if
    appropriate.
  - Made some preparations for implementing SF.net RFE #1054504:
    - changed class UnsuccessfulXINSCallException to non-final, although all
      methods remain final;
    - added UnsuccessfulXINSCallException subclasses:
      . AbstractCAPIErrorCodeException;
      . InternalErrorException;
      . InvalidRequestException;
      . InvalidResponseException.
    - added UnsuccessfulXINSCallExceptionFactory class.
    - added BasicUnsuccessfulXINSCallExceptionFactory class, extends
      UnsuccessfulXINSCallExceptionFactory.
    - changed XINSServiceCaller to use an UnsuccessfulXINSCallExceptionFactory
      to create UnsuccessfulXINSCallException instances, added a getter and a
      setter for this;
    [ work in progress, one AbstractCAPIErrorCodeException subclass needs to
      be generated per error code, an UnsuccessfulXINSCallExceptionFactory
      subclass needs to be generated and the CAPI class needs to create the
      factory and set it on the XINSServiceCaller ]

* XINS/Java Server Framework:
  - If the org.xins.server.config is not set as a system property, the server
    will also try to get the org.xins.server.config from the bootstrap
    properties.
  - Fixed bug #1076638: The generated context ID was not conform to the
    architect group recommendation.
  - The server classes now use the org.xins.common.xml.Element class instead of
    the deprecated org.xins.server.Element class.
  - Added calling convention which allows to specify in which format the data
    should be received and returned. Two implementation are provided "xins-std"
    and "xins-old".

* Logdoc:
  - The parameter types are now defined in the DTD.
  - Optimized performance: the Logger object is looked up only once, the first
    time that the entry is logged.
    Typical impact on performance: Major.

* Build and release process:
  - Fixed bug #1078313: Compilation and Javadoc is done from the source code.
    Compilation and Javadoc generation will be faster.

* Generated build file:
  - Fixed bug #1078317: Compilation and Javadoc of the API is now done using 
    the files of the impl directory without copying them to the build 
    directory. This will increase compilation and javadoc generation 
    performances.

* Generation of server-side Java code:
  - An object is created for the data input parameter.

* Generation of CAPI classes:
  - Optimized performance: Made SECRET_KEY a class field.
    Typical impact on performance: Mimimal.

* Build and release process:
  - Fixed bug #1078313: Compilation and Javadoc is done from the source code.
    Compilation and Javadoc generation will be faster.
  - Fixed netbeans-debug target.

* Libraries
  - Updated xmlenc from 0.44 to 0.45, which should result in a performance
    improvement.
    Typical impact on performance: Medium.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.1.0 ALPHA 4:

* XINS/Java Common Library:
  - Added class CallConfig in package org.xins.common.service. Objects of this
    type specify certain aspects of how a call is executed. For example, for
    an HTTP service caller, a CallConfig object could specify what HTTP method
    (GET, POST, etc.) to use.
  - Added HTTPCallConfig class (derives from CallConfig).
  - Changed ServiceCaller to work with CallConfig objects. Some members have
    been deprecated in favour of newer ones that work with CallConfig objects.
    Greatly improved the documentation in the ServiceCaller class [work in
    progress].
  - Added UnsupportedProtocolException in org.xins.common.service package.
    Documented in ServiceCaller class that this exception should be thrown by
    ServiceCaller subclasses if a TargetDescriptor with an unsupported
    protocol is passed.
  - Changed TargetDescriptor to support capitals in the protocol part of the
    URL. This fixes SF.net bug #1075248.
  - Added ProgrammingError class. An instance of this class should be thrown
    when appropriate, especially after any of the log messages 1050, 1052,
    2050, 2052, 3050 and 3052 [work in progress].

* XINS/Java Client Framework:
  - Fixed SF.net bug #1071731: UnacceptableResultXINSCallException constructor
    threw a NullPointerException instead of the documented
    IllegalArgumentException.
  - The AbstractCAPICallResult class adds the following methods:
    . long duration()                    -- Returns the call duration, in
                                            milliseconds.
    . CallExceptionList exceptions()     -- Returns the list of CallExceptions.
    . TargetDescriptor succeededTarget() -- Returns the target for which the
                                            call succeeded.
  - Refactored the XINSCallRequest and added new setter methods.
  - Added possibility to have a data element as input.
  - Removed the constructor that accepts a XINSServiceCaller from the
    AbstractCAPI class. This constructor was added in XINS 1.1.0-alpha3. Added
    a new constructor that accepts a Descriptor and a XINSCallConfig object
    instead. The other constructor (which accepts a Descriptor only) remains
    deprecated. There should still be no effect, since the constructors are
    considered internal to XINS.
  - Added XINSCallConfig class (derives from CallConfig).
  - Removed the XINSServiceCaller constructor that accepts an HTTPMethod and
    replaced it by one that accepts a XINSCallConfig object. The removed
    constructor was added in XINS 1.1.0-alpha3.

* XINS/Java Server Framework:
  - The _GetStatistics meta-function now supports statistics per error code.
    To retrieve these details, pass "detailed=true" to this function.
  - If the bootstrap of the API failed, then the APIServlet now throws a
    ServletException that contains a reference to the cause exception, for
    improved exception handling. Also, if an InvalidPropertyValueException is
    thrown during this bootstrap process, the reason is now logged as well.
  - Added the possibility to have a data element as input.

* Generated CAPI classes:
  - All call methods now return a function result object, never void. This
    change is backwards compatible with XINS 1.0.
  - All function result objects now contain the call duration, the exceptions
    (if any) and a link to the succeeded target. See the changes for the
    AbstractCAPICallResult class for details.
  - Implemented SF.net RFE #1071756: The MANIFEST.MF file in generated CAPI
    JAR file now contains the version of XINS used to generate the JAR file.
  - Added the possibility to have a data element as input.
  - The generated CAPI classes now no longer offers a constructor that takes a
    XINSServiceCaller. This constructor was introduced in XINS 1.1.0-alpha3.
    Instead, a factory method is introduced. There are 2 forms:
    . public static final CAPI create(PropertyReader, String, XINSCallConfig)
    . public static final CAPI create(PropertyReader, String)
    These methods construct a CAPI instance based on a set of properties and
    the name of an API. The optional XINSCallConfig object can be used to
    configure the XINS service caller.

* Generation of server-side Java code:
  - The MANIFEST.MF file in generated WAR file now contains the version of 
    XINS used to generate the WAR file.
  - Added the possibility to have a data element as input.

* Generated Javadoc now lists the groups of packages in the following order:
  - Logdoc, Common, Client and finally Server. This should now generally be
    applied as the preferred order.

* Generation of specification documentation:
  - The num attribute for the examples is now optional.
  - Added the possibility to have a data element as input.
  - Added the input-data-example element to specify a data section example 
    in the input.
  - Renamed data-example element to output-data-example element. The old
    data-example is still supported for compatibility issues.

* DTD:
  - Remove element or attribute checking already done by the DTD.
  - Added type_1_1.dtd that contains the new types float32, float64, and
    base64.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.1.0 ALPHA 3:

* XINS/Java Common Library
  - Added class function quote(Object) to class TextUtils.

* XINS/Java Client Framework:
  - Fixed SF.net bug #1069436: No function name included in the description of
    a XINSCallRequest object and consequently in the message for
    CallExceptions for a XINS call request. Improved the XINSCallRequest
    description string.
  - The AbstractCAPI class now adds a constructor that accepts a
    XINSServiceCaller. The other constructor, which accepts a Descriptor, has
    been deprecated. The effect is minimal, since the constructors are
    considered internal to XINS.
  - A XINSCallRequest does not have to specify an HTTP method anymore. If it
    is not specified, then the XINSServiceCaller determines what HTTP method
    to use. Consequently, an XINSServiceCaller object now has an HTTPMethod
    object associated with it.
  - Added tests for class XINSCallRequest.

* XINS/Java Server Framework:
  - Added the possibility to point to an ACL file in the ACL runtime property.

* Generated CAPI classes:
  - The generated CAPI classes now offer a constructor that takes a
    XINSServiceCaller.

* Other:
  - Removed src/ant/transform.xml which was no longer used since XINS 0.165.
  - Slightly improved and cleaned the 'xins' shell script. Now the '-version'
    and the 'version' argument both work the same. Also, the shell script now
    calls Ant only once. Then Ant first does the transformation from
    xins-project.xml to build.xml and then executes the generated build.xml
    directly.
    Note that the xins.bat batch file has not been changed yet.
  - Linking to Apache Ant 1.6.2 API docs at xins.sourceforge.net, since they
    are not available at apache.org.
  - Improved performance of release process greatly. Biggest gain is made by
    sending a compressed archive of files to the web server instead of all
    individual files separately.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.1.0 ALPHA 2:

* XINS/Java Server Framework:
  - If no build version is provided, just set a warning in the log instead of
    throwing a exception.

* XINS/Java Client Framework:
  - Improved XINSCallResultParser with regard to logging, documentation,
    memory use and performance.
  - Changed DataElement class to support namespaces. Some methods have been
    deprecated in favor of new ones.

* Generation of server-side Java code:
  - Import type classes for the generated implementation class.

* Generation of specification documentation:
  - Added support for multiple elements in the output data section.

* Logdoc:
  - Added French locale.
  - XML files are now in UTF-8 encoding format.
  - Fixed small error on the English translation of the server side logdoc.
  - Translation bundle are now possible on multiple lines.

* Libraries
  - Upgraded Log4J from 1.2.6 to 1.2.9.
  - Upgraded Jakarta Commons Logging from 1.0.3 to 1.0.4.
  - Upgraded xmlenc from 0.43 to 0.44.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.1.0 ALPHA 1:

NOTE: This release is based on XINS 1.0.0-beta11.

* XINS/Java Client Framework:
  - Fixed SF.net bug #1063699: Log if call fails on error code. The log
    message 2112 was already defined for this purpose, but it was just not
    used in the code.
  - Fixed SF.net bug #1063672 (XINS call logging: Only first failure is
    logged). Each individual failure is now logged, per target.
  - Fixed bug #1063818: XINSResultParser fails if spaces exist between XML 
    elements.
  - Fixed SF.net bug #1063785: Double spaces in description of a
    XINSCallRequest.
  - Removed deprecated methods from class DataElement:
    . public Iterator getChildren()
    . public Iterator getChildren(String name)
    Changed the tests accordingly.
  - Removed class field SERVICE_DESCRIPTOR_TYPE that was deprecated since XINS
    1.0.0-beta6.
  - Removed log message which previously had the ID 2101, since it did not add
    any information. Previously it was logged right after a call was
    performed, whether it was successful or not. Replaced it by a log message
    that indicates that a successful XINS result was received. This message
    previously had ID 2111, but it was never actually logged. Now it is, but
    on 2101. The ID 2111 is now used for a new log message for unexpected
    exceptions caught while calling the XINS service.
  - Removed log message with ID 2107 (XINS result received, status code is
    considered acceptable) since it not considered useful.
  - Now actually logging message 2109 (Unrecognized I/O error while calling
    XINS service).
  - Unified translations in the 21xx range.
  - Changed level of the following log messages to WARNING:
    . 2102 (was INFO);
    . 2103 (was INFO);
    . 2104 (was INFO);
    . 2105 (was INFO);
    . 2106 (was INFO);
    . 2108 (was INFO);
    . 2109 (was NOTICE);
    . 2110 (was NOTICE);
    . 2111 (was INFO);
    . 2112 (was INFO).
  - Added log message 2113: XINS call request completely failed.
  - Changed log messages 2200 and 2206 to include namespace.
  - Improved XINSCallResultParser behavior. Logging is improved and the parser
    is now XML Namespaces-aware.

* XINS/Java Server Framework:
  - Fixed bug #1036854: Reset logging subsystem when reloading.
  - If the "org.xins.server.config.reload" is zero the FileWatcher won't be 
    started.
  - Added _ReloadProperties meta function.
  - Changed the way the _GetSettings meta-function retrieves the system
    properties. It now succeeds without throwing an exception even if a
    SecurityManager denies access to system properties.
    This fixes an issue with the integration with NetBeans 4.0-beta2.
  - Slightly changed exception handling in bootstrapping code in API class.
    The behavior should remain the same, though.

* XINS/Java Common Library:
  - Added new types Float32 and Float64.
  - Added new type Base64.
  - Added a new Base64 class that perform base 64 encoding and decoding.
  - Changed the level of all Logdoc messages in the 'service' group to DEBUG.
    Proper logging is the responsibility of the ServiceCaller subclass and
    corresponding classes.
  - Changed UnexpectedExceptionCallException constructor: The 'cause' argument
    is now mandatory.
  - Changed FileWatcher class: Logging message 1052 each time a callback
    method throws an exception. The exception is still ignored, as before.
  - Changed HTTPServiceCaller class: Logging message 1052 when
    HttpMethod.releaseConnection() throws an exception. The exception is still
    ignored, as before.
  - Changed TimeOutController class: Logging message 1052 when
    Thread.join(int) throws an InterruptedException. The exception is still
    ignored, as before.

* Generated CAPI classes:
  - Fixed bug #1061692: A NullPointerException was thrown when using
    Java 1.4.0 or Java 1.4.1.

* Generation of specification documentation:
  - Fixed bug #1061692: A NullPointerException was thrown when using
    Java 1.4.0 or Java 1.4.1.
  - Fixed bug #1064487: The function name is not written in the examples.

* Generation of server-side Java code:
  - Fixed bug #1061692: A NullPointerException was thrown when using
    Java 1.4.0 or Java 1.4.1.
  - Fixed bug #1063006: log.xml with alpha DTD fails if no server reachable.
  - The xins-client.jar file is now also included in the generated war file.

* Generation of types Java code:
  - Fixed bug #1061692: A NullPointerException was thrown when using
    Java 1.4.0 or Java 1.4.1.
  - Added new types float32 and float64.
  - Added new type base64.
  - If the type is not specified '_text' is used as default.

* Logdoc:
  - Added new types float32 and float64.

* Javadoc
  - Changed URL at the bottom of the pages to http://www.xins.org.

* Build and release process:
  - Adapted the release process to the new XINS version format.
  - Added netbeans-debug task.
  - Disabled optimization for javac.

* Libraries:
  - Updated Apache Jakarta Commons HttpClient from 2.0.1 to 2.0.2.

* Added support for the -version argument for the xins commands.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.0.0 FINAL:

No changes.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.0.0 RELEASE CANDIDATE 3:

* Generation of specification documentation:
  - Fixed bug #1064487: The function name is not written in the examples.

* XINS/Java Client Framework:
  - Removed log message which previously had the ID 2101, since it did not add
    any information. Previously it was logged right after a call was
    performed, whether it was successful or not. Replaced it by a log message
    that indicates that a successful XINS result was received. This message
    previously had ID 2111, but it was never actually logged. Now it is, but
    on 2101. The ID 2111 is now used for a new log message for unexpected
    exceptions caught while calling the XINS service.
  - Removed log message with ID 2107 (XINS result received, status code is
    considered acceptable) since it not considered useful.
  - Now actually logging message 2109 (Unrecognized I/O error while calling
    XINS service).
  - Fixed SF.net bug #1063672 (XINS call logging: Only first failure is
    logged). Each individual failure is now logged, per target.
  - Unified translations in the 21xx range.
  - Changed level of the following log messages to WARNING:
    . 2102 (was INFO);
    . 2103 (was INFO);
    . 2104 (was INFO);
    . 2105 (was INFO);
    . 2106 (was INFO);
    . 2108 (was INFO);
    . 2109 (was NOTICE);
    . 2110 (was NOTICE);
    . 2111 (was INFO);
    . 2112 (was INFO).
  - Added log message 2113: XINS call request completely failed.

* XINS/Java Common Library:
  - Changed the level of all Logdoc messages in the 'service' group to DEBUG.
    Proper logging is the responsibility of the ServiceCaller subclass and
    corresponding classes.
  - Changed UnexpectedExceptionCallException constructor: The 'cause' argument
    is now mandatory.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.0.0 RELEASE CANDIDATE 2:

* XINS/Java Client Framework:
  - Fixed SF.net bug #1063699: Log if call fails on error code. The log
    message 2112 was already defined for this purpose, but it was just not
    used in the code.
  - Removed deprecated methods from class DataElement:
    . public Iterator getChildren()
    . public Iterator getChildren(String name)
  - Removed class field SERVICE_DESCRIPTOR_TYPE that was deprecated since XINS
    1.0.0-beta6.
  - Fixed bug #1063818: XINSResultParser fails if spaces exist between XML 
    elements.

* Generated CAPI classes:
  - Fixed bug #1061692: A NullPointerException was thrown when using
    Java 1.4.0 or Java 1.4.1.

* Generation of specification documentation:
  - Fixed bug #1061692: A NullPointerException was thrown when using
    Java 1.4.0 or Java 1.4.1.

* Generation of server-side Java code:
  - Fixed bug #1061692: A NullPointerException was thrown when using
    Java 1.4.0 or Java 1.4.1.
  - Fixed bug #1063006: log.xml with alpha DTD fails if no server reachable.

* Generation of types Java code:
  - Fixed bug #1061692: A NullPointerException was thrown when using
    Java 1.4.0 or Java 1.4.1.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.0.0 RELEASE CANDIDATE 1:

* No changes compared to XINS 1.0.0-beta11.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.0.0 BETA 11:

* XINS/Java Client Framework:
  - Improved the interface of class DataElement:
    . Replaced getChildren(), which returns an nullable Iterator, with
      getChildElements(), which returns a non-nullable List. The former method
      is marked as deprecated and may be removed before XINS 1.0.0-rc1.
    . Replaced getChildren(String), which returns an nullable Iterator, with
      getChildElements(String), which returns a non-nullable List. The former
      method is marked as deprecated and may be removed before XINS 1.0.0-rc1.

* XINS/Java Server Framework:
  - Fixed SF.net bug #1058074. Transaction logging now also applies to meta
    functions. Applied some refactorings during the process: Changed
    FormattedDate and FormattedParameters from inner classes in class Function to
    outer class with package-private access.
  - Changed log messages 3540 and 3541 so they no longer accept a 'callID'
    parameter. The parameter is not used in the translation. This is done
    because it simplified the introduction of transaction logging for
    meta-functions.

* XINS build file:
  - Improved 'help' target slightly.

* Generated build file:
  - Implemented SF.net RFE #1060606: Added 'capis' target.

* Generated CAPI classes:
  - Implemented SF.net RFE #1060282: Not generating dead code for
    'currentParam' variable if there are in fact no parameters.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.0.0 BETA 10:

* Generated CAPI classes:
  - Fixed SF.net bug #1060230: The method 'getDataElement()' in
    <FunctionName>Result classes has been removed. Use the 'dataElement()'
    method instead, which was introduced in XINS 1.0.0-beta9.
    WARNING: This may (and is expected to) break existing code.

* XINS/Java Client Framework:
  - Added getChildren(String) to class DataElement.
  - Various other improvements to DataElement class.

* Tests:
  - Changed max queue time-out in ExpiryFolderTests from 10 ms to 2 sec.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.0.0 BETA 9:

* Generated CAPI classes:
  - The method 'getDataElement()' in <FunctionName>Result classes has been
    renamed to 'dataElement()' to avoid a clash with a generated method for an
    output parameter named 'dataElement'.
    The 'getDataElement()' method is marked as deprecated and is planned to be
    removed before XINS 1.0.0-rc1. As soon as this method is removed, SF.net
    bug #1060230 is resolved.
    WARNING: When the getDataElement() method is removed, this may break
    existing code.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.0.0 BETA 8:

* XINS/Java Server Framework:
  - Added log message for an unexpected exception.

* XINS/Java Client Framework:
  - Improved logging.
  - Added log message for an unexpected exception.
  - Added missing translations for some log messages.

* XINS/Java Common Library:
  - Added log message for an unexpected exception.
  - Added 'detail' property to ParseException class.
  - Added getter for 'detail' property in CallException class.

* Generated CAPI classes:
  - All generated callXxxx methods now return either void or a
    <FunctionName>Result object. This change is required in order to allow an
    UnacceptableResultXINSCallException to be thrown, even if the function
    only returns a data section or a single output parameter.
    WARNING: This may break existing code.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.0.0 BETA 7:

* XINS/Java Server Framework:
  - Removed unused imports.
  - Set the log numbers in a sequential order.
  - Added missing tranlations for some logging messages.
  - Switched log numbers from 1XXX to 3XXX.
  - Warn if the build version of the API is more recent than the running
    version.
  - Removed @since for all fields and methods.
  - All classes are now marked with @since XINS 1.0.0.

* XINS/Java Client Framework:
  - Removed unused imports.
  - Removed unused log numbers.
  - Added missing tranlations for some logging messages.
  - Fixed some incorrect links in Javadoc.
  - Removed @since for all fields and methods.
  - All classes are now marked with @since XINS 1.0.0.
  - Sending down function name in 2 parameters: "function" and "_function".
    This is for backwards compatibility, but this may be reverted in the
    future, so that only "_function" is sent down.

* XINS/Java Common Library:
  - Set the log numbers in the correct order.
  - Fixed missing translations.
  - Removed unused imports.
  - The MandatoryArgumentChecker also checks that the argument names are not
    null.
  - Added logging message with HTTP parameters and duration for the
    HTTPServiceCaller.
  - Fixed some incorrect links in Javadoc.
  - Switched log numbers from 3XXX to 1XXX.
  - Removed @since for all fields and methods.
  - All classes are now marked with @since XINS 1.0.0.

* Generation of specification documentation:
  - Added missing forward slash for the URL generated for broken links.

* Added copyright statement at the beginning of the java and xslt files.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.0.0 BETA 6:

* XINS/Java Server Framework:
  - Added tests for _GetSettings, _DisableFunction, _EnableFunction and
   _GetFunctionList meta functions.
  - Fixed some Checkstyle-reported issues, like missing Javadoc comments.

* XINS/Java Common Library:
  - Added the hashCode() and equals() method to the types Date and Timestamp.
  - Fixed the HTTPServiceCaller did not pass the arguments correctly when using
    the GET method.
  - Added TextUtils class.
  - Added tests for the ExpiryFolder and MandatoryArgumentChecker.
  - Fixed some Checkstyle-reported issues, like missing Javadoc comments.

* XINS/Java Client Framework:
  - Added more test using the AllInOne CAPI.
  - Fixed some Checkstyle-reported issues, like missing Javadoc comments.
  - Improved the logging.
  - Refactored XINSCallResultParser, improved the documentation for it and
    improved and extended the tests for it. Fixed bug that caused the PCDATA
    content in the data section to be not parsed correctly.

* Tests
  - Added JCoverage to the libraries and added a coverage task that shows the
    code covered by the tests.
  - Integrated the allinone example to the src/tests directory.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.0.0 BETA 5:

* XINS/Java Server Framework:
  - When an object is added to the data section, a clone of this object is
    added to the element.
  - The class Element now implements the Cloneable interface.
  - Added a test for the AllInOne example.
  - Added a test for the _NoOp meta function.

* XINS/Java Client Framework:
  - The class DataElement now implements the Cloneable interface.
  - If the result has no parameters, getParameters() returns null.
  - If a DataElement has no children or no attributes, null is returned.

* Logdoc:
  - The validation of the Logdoc XML files is now done using the local files
    when the declaration uses 1.0 alpha.

* DTD:
  - Linked DTDs to www.xins.org instead of xins.sourceforge.net.

* Generation of build file:
  - Linked the Javadoc to www.xins.org instead of xins.sourceforge.net.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.0.0 BETA 4:

* XINS/Java Common Library:
  - Fixed SF.net bug #1051551: Changed HTTPServiceCaller so it now correctly
    recognizes an UnknownHostException and throw an UnknownHostCallException
    instead. This allows fail-over in all situations that involve an 'Unknown
    host' error. Added UnknownHostCallException as subclass of
    ConnectionCallException.
  - Improved tests for HTTP service caller.
  - Improved Javadoc documentation.

* XINS/Java Client Framework:
  - Added tests for class XINSCallResultParser.
  - Improved Javadoc documentation.

* XINS/Java Server Framework:
  - Fixed SF.net bug #1032469. Previously, a negative reload interval not
    handled properly. Now the framework will not accept this any longer and
    enter a failure state, Added 2 states to the APIServlet for this:
    DETERMINE_INTERVAL and DETERMINE_INTERVAL_FAILED.
  - Removed log message 1412. The relevant information is in log message 3200
    already, logged directly by the FileWatcher when the file watch thread
    starts running.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.0.0 BETA 3:

* XINS/Java Server Framework:
  - Logging warning if the current XINS version is not a production release.
  - Added test for the _GetStatistics meta function.
  - Clear the list of manageable objects (children) when deinitializing the
    API as these are added during the initialisation.

* XINS/Java Client Framework:
  - Fixed SF.net bug #1053573. A parsing problem that occurred when a result
    had a data section.
  - Added a getName() method to the DataElement class.

* Build and release process:
  - Fixed incorrect URL in the README.html.
  - Added the Jetty XML files to start the other demos.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 1.0.0 BETA 2:

* XINS/Java Server Framework:
  - Cleaned up and improved Logdoc.
  - Fixed SF.net bug #1042113. Function without input parameters no longer
    generates a NullPointerException. This bug has been in XINS since version
    0.207.
  - Fixed SF.net bug #1049146. The recognition of the hostname on the local
    machine has now been improved.
  - Fixed SF.net bug #1049149. The 'bootstrapped' message is now only printed
    once when the framework is bootstrapped (during the initialization of the
    servlet).
  - Fixed SF.net bug #1049162. APIServlet now allows the state to change from
    READY to INITIALIZING_API. This bug has been in XINS since XINS 0.207.
  - Fixed bug. The context identifier uses now the localhost hostname
    instead of the hostname of the remote host.
    This bug has been in XINS since version 0.203.
  - Removed Dutch Logdoc translations.

* XINS/Java Common Library:
  - Cleaned up and improved Logdoc.
  - Fixed SF.net bug #1049850 ("FileWatcher thread dies if listener throws an
    exception"). This bug has been in XINS since the introduction of the
    FileWatcher class, in XINS 0.121 (initially in the package
    org.xins.util.io).
  - Added the possibility to use the HTTPServiceCaller without parameters.
  - Moved the URLEncoding class from the net package to the text package.
  - Added unit test classes for the IntXX type classes.
  - Removed boundary checks on all methods except the isValidValue method in
    all the IntXX type classes.
  - Added unit test class for Boolean type class.
  - Added fileFound() method to FileWatcher.Listener interface.
    WARNING: This may break existing code.
  - Added unit tests for the HTTPServiceCaller.
  - Class HTTPCallResultData is now an interface.
  - Class HTTPCallResult now implements HTTPCallResultData interface.
  - A ClassCastException was thrown if HTTPServiceCaller.call(HTTPCallRequest)
    was called and the call succeeded. This is now fixed.

* XINS/Java Client Framework:
  - Fixed SF.net bug #1043048. Previously a ClassCastException was thrown if
    XINSServiceCaller.call(XINSCallRequest) was called and the call succeeded.
  - Fixed SF.net bug #1050606. If no data received from an HTTP call, an
    InvalidResultXINSCallException is thrown instead of an
    IllegalArgumentException.
  - Fixed the Javadoc for the UnsuccessfulXINSCallException.
  - Added AbstractCAPICallResult as base class for generated function call
    result classes.
  - Changed UnacceptableResultXINSCallException to accept an
    AbstractCAPICallResult instance as an alternative to a XINSCallResult
    instance. This is necessary so CAPI users can actually throw an
    UnacceptableResultXINSCallException, since they have no handle to a
    XINSCallResult instance directly.
  - If doCall(CallRequest) throws an unexpected type of exception, then an
    Error is thrown. Improved the message for that Error, and registering the
    cause of the Error properly.
  - Class XINSCallResult now implements XINSCallResultData interface.
  - Added UnsuccessfulXINSCallException constructor that accepts a
    XINSCallResultData instance.
  - Removed the call(XINSCallRequest,TargetDescriptor) method from class
    XINSServiceCaller.
    WARNING: This may break existing code.

* Logdoc
  - The boolean type was not declared in the log_to_entry_html.xslt as a
    logdoc type. This is now fixed.
  - Refactored the translation-bundle_to_java.xslt as the previous
    implementation failed in some possible situations.

* Generation of server-side Java code:
  - Added a remoteIP() method in the request to retrieve the IP address of the
    remote host that performed the call.
  - Fixed a problem when generating the author in the @author tag.
    This bug has been in XINS since version 0.208.
  - Fixed some Javadoc tags.

* Generation of client-side Java code (CAPI):
  - Fixed a compilation error when a function has no input parameters.
    This bug has been in XINS since version 0.208.
  - Generated function call result classes now extend class
    org.xins.client.AbstractCAPICallResult instead of class java.lang.Object.

* Generation of types Java code:
  - Added fromStringForOptional and fromStringForRequired methods for the
    types _int8, _int16, _int32 and _int64. The methods will throw a
    TypeValueException if the value passed as parameter is out of the
    bounderies.
  - Added fromStringForOptional and fromStringForRequired methods for the
    PatternType.

* Generation of specification documentation:
  - Added the broken freeze warning message for types and result codes.
  - Added support for the new directory structure for the broken freeze links.
  - Added output section for result codes that define an output section.
  - Added support for the <pcdata> element for the data section.
  - Fixed a layout problem for the element-example.

* Generation of build file:
  - Fixed SF.net bug #1040507. If the authors.xml file does not exist the
    owner is not declared in the api.xml file.
    This bug has been in XINS since version 0.207.
  - Previously the 'create-logdoc' target generated the domain and
    default-locale attributes in the log.xml file. This is now fixed.
  - The generated javadoc for the API now shows the package-private members as
    well.
  - The files created with the "create" targets have now the correct OS
    linefeed character(s).

* Tests
  - Added the MetaFunctionsTests that tests the XINSServiceCaller and the
    _GetVersion meta function. This test requires the xins-examples directory
    in the same directory as xins. The allinone example should be compiled.
  - Added a basic implementation of a Servlet container that can run XINS APIs.

* Build and release process:
  - Added the possibility to release with a specific version
    (e.g. 1.0.0-beta2).
  - Added the help target that provides help for the main targets.
  - Removed the sfaddrelease target.

* DTD:
  - Moved the pcdata-example after the attribute-example.
  - Removed the multiplicity attribute from the DTD as it is not used for
    the code generation.

* Generic XSLT include files:
  - Removed support for the 'extends' attribute in type classes.

* Generation of Checkstyle report:
  - Unified file name for Windows and UNIX/Linux systems. No longer including
    full path.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.208 (1.0.0 BETA 1):

* XINS/Java Common Library:
  - Added the remove() method in ProtectedPropertyReader. The set() method
    does not remove the property anymore if the value is null.
  - Changed HTTPServiceCaller handling of input parameters. If a parameter
    value is null, then the parameter is now passed down, with the empty
    string as the value. Previously the parameter would not be sent down at
    all.
  - Added 'failOverAllowed' property to HTTPCallRequest. If this flag is set,
    then fail-over is always allowed.

* XINS/Java Client Framework:
  - Applied some refactorings and improved documentation.

* Logdoc
  - Removed unused log entries.

* Generation of specification documentation:
  - Fixed the API owner is now printed correctly on the API page.
    This bug has been in XINS since version 0.207.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.207:

* XINS/Java Server Framework:
  - Removed the getCallResult() method from CallContext as it's not used.
  - Caught BootstrapExceptions and Throwables are now handled in a similar
    way.
  - Removed some TODOs that are no longer relevant.
  - Check the state of API and APIServlet before calling a method.
  - Used another system to suspend any call to an API when the statistics
    are reset.
  - Removed _PerformGC metafunction.
  - Removed support for XSLT transformations.
  - Changed access level of field _api in class Function from protected to
    private. Subclasses should use getAPI() to get a reference to the API
    object.
    WARNING: This may break existing code.
  - Removed the "org.xins.server.output.compatibility" property.
  - The returned output stream from the Servlet is now closed instead of
    being only flushed.
  - Fixed some Checkstyle-reported issues, like missing Javadoc comments.

* XINS/Java Common Library:
  - Completely refactored the service calling framework.
  - Narrowed the definition of a service caller to TCP-based services.
  - Moved the HTTPServiceCaller and supporting classes from package
    org.xins.common.service.http to org.xins.common.http.
  - Fixed argument for log message 3312. Now actually sending the URL instead
    of the textual representation of the TargetDescriptor.
  - Minor change to translation of log messages 3312 and 3313.
  - Changed the interface and rewrote the implementation of the service caller
    framework in package org.xins.common.service.
  - Removed deprecated method execute(Thread,int) from class
    TimeOutController.
  - Removed TODO entries that are done or no longer relevant.
  - Added more logs for the Doorman.
  - Removed method serialize(PropertyReader,LogdocStringBuffer) from class
    PropertyReaderUtils and replaced it with
    serialize(PropertyReader,FastStringBuffer,String). The former was not used
    anywhere.
  - Removed method getTimeOut() in class TargetDescriptor. It was deprecated
    and replaced by getTotalTimeOut() in XINS 0.202.
  - Fixed some Checkstyle-reported issues, like missing Javadoc comments.
  - Fixed the state after the deinitialization of the manageable should be
    UNUSABLE instead of USABLE.

* XINS/Java Client Framework:
  - Added some Javadoc to the ResultParser class.
  - Using the new service caller framework.
  - Supporting checking of HTTP status codes.
  - Removed AbstractCAPI(XINSServiceCaller). This constructor was deprecated
    since XINS 0.192.
  - Fixed some Checkstyle-reported issues, like missing Javadoc comments.

* Logdoc
  - An error is thrown when you register a log that doesn't support the
    current locale.
  - Changed levels for log message entry 1404 from INFO to DEBUG.

* Generation of server-side Java code:
  - Removed unused imports in the generated APIImpl.java.
  - Fixed some unused variable that conflicted with existing one that had the
    same name using the JDK 1.5.
  - The @author tag is filled in with the name and the e-mail of the API owner
    if the owner is specified in the API.

* Generation of client-side Java code:
  - No longer generating deprecated CAPI constructor that takes a
    XINSServiceCaller instance as the argument.

* Generation of specification documentation:
  - The optional author file is computed only when needed as it may fail
    with some XSLT processor such as JDK 1.5 when absent.
  - Fixed the layout of some brackets in the generated API HTML page.

* Generation of build file:
  - Added some missing description for the targets help, version and run.
  - Remove the directory build/classes from being created as it's not used.
  - The owner is created in api.xml only if a authors.xml file exists.
  - The XSLT first test if an API is using the new framework.
    Note that if an API is using the old framework it may fail with the
    JDK 1.5.
  - Renamed the "run" target to "ask" to avoid conflict with Netbeans "run"
    target.

* Build and release process:
  - Removed the TODO file from the release.
  - Replaced the README file with README.html.
  - Added the example for Jetty in the demo.

* Libraries
  - Updated some incorrect license files.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.206:

* XINS/Java Server Framework:
  - Removed the _GetLogStatistics meta function.
  - Removed some unused fields in CallContext.
  - Removed references to the ServletRequest in Function, API and CallContext.
  - Merged FormattedInputParameters and FormattedOutputParameters in one
    class FormattedParameters.
  - Removed unused import statements.
  - Simplified the FormattedDate class.

* XINS/Java Common Library:
  - Reabilitated the ServletRequestPropertyReader removed in the previous
    version as it's now used by the server framework.
  - Removed unused import statements.
  - Removed deprecated method controlTimeOut(Thread, TargetDescriptor).
  - Added new method to create a TargetDescriptor with a default time-out.

* XINS/Java Client Framework:
  - Removed unused import statements.
  - Added some getter methods for the DataElement.
  - Each DataElement now must have a qualified name.
  - Fixed the bug 1010776 that did not close the sockets with CAPI.
    This bug has been in XINS since version 0.195.
  - _function is now used instead of function for the function name parameter.
  - Moved the Result class to a separate class.

* Logdoc:
  - Removed the counter that counted the number of time that a log was
    invoked.
  - Removed the attributes domain and default-locale from the DTD and log.xml.

* Generation of specification documentation:
  - _function is now used instead of function for the function name parameter.

* Generation of build file:
  - Added a run target that asks for the command and API to execute.

* Moved the bin directory from xins/src to xins directory.

* Removed some TODOs done.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.205:

* XINS/Java Server Framework:
  - Replaced some tabs in the code by spaces.
  - The functions returns _InternalError when the API is deinitializing.
  - The FileWatcher is stopped when the API is stopped.
  - Adding some logs when bootstrapping or stopping the API.
  - Improved exception message for the AccessDeniedException and the
    NoSuchFunctionException.
  - Added some getter methods to get more information for the
    AccessDeniedException and the NoSuchFunctionException.
  - Fixed some Javadoc.
  - Replaced JDom element by org.xins.server.Element.
  - Removed the interface CallResult and the implementations, the result
    is now stored in FunctionResult.

* XINS/Java Common Library:
  - Replaced some tabs in the code by spaces.
  - Set constants in HexConverter as static class fields.
  - Added the possibility for the HexConverter to convert hexadecimal numbers
    that contain uppercases A to F.
  - Fixed some Javadoc.
  - Removed unused files BooleanConstants, FastStack, FixedArraySet,
    ArrayIterator, CollectionUtils, IndexedMap, PropertyReaderConverter,
    SingleEntryMap, ServletRequestPropertyReader, ServletUtils and Replacer.
  - Removed the tests for SingleEntryMap and Replacer.
  - Removed SafeRandom, NaiveTrustManager and all ldap related classes.

* XINS/Java Client Framework:
  - Fixed some Javadoc.

* Generation of Java code:
  - Removed references to JDom replaced by org.xins.server.Element.

* Libraries:
  - Removed the JDom library as it's no longer used.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.204:

* XINS/Java Common Library:
  - Improved the CallFailedException message to return more information.
  - Changed the execute method in class TimeOutController to accept a Runnable
    instead of a Thread. The old method is marked deprecated.
  - Changed the controlTimeOut method in class ServiceCaller to accept a
    Runnable instead of a Thread. The old method is marked deprecated.

* XINS/Java Client Framework:
  - The SaxParser parse the response from the byte[] instead of the
    InputStream as the InputStream may be closed before parsing.
    This bug has been in XINS since 0.203.
  - Fixed some bugs that existed since 0.203 and that prevented the SaxParser
    to parse the returned result.

* Logdoc:
  - Fixed a bug in XINS 0.203 that failed the creation of the HTML logdoc
    pages.
  - Changed the property org.xins.server.log.locale to org.xins.logdoc.locale.
    The property org.xins.server.log.locale is now deprecated.
  - The domain attribute for the log.xml is no longer used. The package name
    is used instead.
  - Default locale changed from "us_US" to "en_US".

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.203:

* XINS/Java Server Framework:
  - Changed the format of the context identifier to app@hostname:time:random.
  - The servlet fails is the locale is not supported by all parties that
    use Logdoc.

* XINS/Java Common Library:
  - Replaced the way to find the hostname for the hostname task.
  - Added serialize() function to PropertyReaderUtils that constructs a
    LogdocSerializable for a PropertyReader.
  - Changed behavior of TargetDescriptor:
    . if the connection time-out is not set (0 or negative int value) then it
      defaults to the total time-out;
    . if the socket time-out is not set (0 or negative int value) then it
      defaults to the total time-out.
    This should fix SF.net bug 1008613. This bug has been in XINS since
    release 0.195.

* XINS/Java Client Framework:
  - Removed the deprecated getCode() method from UnsuccessfulCallException.
  - Extended interface of UnacceptableCallResultException.
  - Removed the unused class MultipleIPAddressesException.
  - Overhaul of logdoc entries.
  - Explicitly defined duration in CallException as the call duration.
  - Changed UnacceptableCallResultException to extend CallException again.
  - Removed public reference to JDom, the org.jdom.Element is replaced with
    org.xins.client.DataElement.
    WARNING: This may break existing code.
  - Replaced the Dom parser with a SAX parser to parse the XML.
  - Marking the XINSServiceCaller.CallExecutor thread as a daemon thread.

* Logdoc:
  - Changed the interface of class AbstractLogdocSerializable (introduced in
    XINS 0.201) in an incompatible way. All subclasses have been adapted
    accordingly.
  - Added the possibility to set the Logdoc locale property at start-up time.

* Generation of specification documentation:
  - Fixed regeneration of the test forms if the environments.xml file has
    changed. This bug has been in XINS since version 0.183.

* Generation of build file:
  - Set the format of the web.xml with Unix line feed.
  - The index of the APIs are regenerated if needed when executing
    specdocs-<api>.

* Libraries:
  - Updated JDOM library to version 1.0 Beta 10 Release Candidate 1.
  - Updated Apache Jakarta Commons HttpClient from 2.0 to 2.0.1.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.202:

* XINS/Java Server Framework:
  - Added the optional org.xins.server.output.compatibility property that
    sets the output format compatibility for the returned XML. The APIs that
    want to keep compatibility with XINS 0.180 or below should set the value
    to "alpha".

* XINS/Java Common Library:
  - Added a new static method getItemByName() in EnumItem.
  - Changed the getItemByValue() to a static method.
  - Renamed getTimeOut() in class TargetDescriptor to getTotalTimeOut().
    Deprecated the method with the old name.
  - Added size() method to PropertyReader interface and to all implementing
    classes.
  - Added another way to find the hostname for the hostname task.

* XINS/Java Client Framework:
  - CallException and all subclasses now take CallRequest, TargetDescriptor
    and duration arguments. The exception message has been greatly improved.
    The old constructors have been removed, so existing code may need
    altering.
  - Removed deprecated methods from XINSServiceCaller class.
  - Added failOverAllowed property in CallRequest and changed
    XINSServiceCaller to always allow fail-over if this property is set.
  - Behaviour of XINSServiceCaller changed in case of an unsuccessful result.
    Previously, the result was directly returned. Now an
    UnsuccessfulCallException is immediately thrown, instead.
  - Supporting linking of CallExceptions by means of the
    setNext(CallException) and getNext() methods.
  - XINSServiceCaller.execute() now throws a CallException instead of a
    CallFailedException.
  - UnacceptableCallResultException no longer extends from CallException, just
    from Exception.
  - TODO: XINSServiceCaller should not rethrow RuntimeException and Error
    exceptions, but it should encapsulate them in a CallException, so that the
    linking will work correctly in the execute() method.

* Generation of specification documentation:
  - Implemented the pcdata-example attribute.

* Logdoc:
  - Removed the possibility to have multi-line text in the translation element
    of the translation-bundle.xml file as it removed some needed spaces.

* Generation of build file:
  - Added the name of the API as a parameter in the generated web.xml file.

* Build and release process:
  - Added the argument source="1.4" to the javadoc task to avoid errors with
    the assert keyword.

* Improved the documentation and the examples.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.201:

* XINS/Java Server Framework:
  - Changed log message 1540:
    . log the start timestamp with millisecond instead of second precision;
    . log a zero character ('0') for the error code if there is none;
    . log a hyphen ('-') for the input parameters if there are none;
    . log a hyphen ('-') for the output parameters if there are none;
    . no longer quoting the parameter values;
    . no longer logging parameters that have a null or empty string as value;
    . changed order of parameters;
    . no longer logging the call ID (at least in the translations).
  - Added log message 1541, which is similar to 1540, except that it does not
    log the input and output parameters.
  - Removed log messages 1514, 1516 and 1517. The information these messages
    provided is available in log messages 1540 and/or 1541.
  - Added logdoc entries:
    . 1309: XINS/Java Server Framework is bootstrapping. This also logs the
            version.
    . 1310: XINS/Java Server Framework version is different from XINS/Java
            Common Library version.

* XINS/Java Client Framework:
  - CallException constructors that get a cause exception as an argument now
    determine the root cause of that exception and use that as the real cause.
  - Added getTarget method to class CallException. It returns the
    TargetDescriptor.
  - Changed the access modifiers for CallException and its subclasses so that
    they cannot be instantiated outside the package.
  - Added new constructors to the following subclasses of class CallException
    that take a TargetDescriptor argument and a CallRequest argument, and
    deprecated the old constructors:
    . CallIOException
    . ConnectException
    . InvalidCallResultException
  - Removed all existing constructors from class InvalidCallResultException,
    except the one that is used, that accepts a String argument only.

* XINS/Java Common Library:
  - PropertyReader interface no longer directly extends LogdocSerializable.
    The class function serialize(PropertyReader,LogdocStringBuffer) has moved
    from class AbstractPropertyReader to class PropertyReaderUtils. Use that
    class function for a default way of serializing a PropertyReader, using
    the Whisl encoding.

* Logdoc:
  - Added class AbstractLogdocSerializable. It supports lazy initialization.
  - No longer automatically logging the log entry counter (followed by a
    space) before the actual translation as specified in the translation file.
    The fallback default message, however, still includes the entry counter.
  - Added the possibility to have a multi-line text in the translation element
    of the translation-bundle.xml file.

* Generation of specification documentation:
  - Fixed layout for min and max for number types.

* Generation of build file:
  - The CAPI generated javadoc now links to the J2SE 1.4.2 and accepts the
    assertion keyword.

* Build and release process:
  - Referred to the local location of Logdoc DTD files when creating the
    logdoc/build.xml file.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.200:

* XINS/Java Common Library:
  - Added class function parseHexBytes() to class HexConverter.

* Build and release process:
  - Changed Java compilation process to produce Java 1.4-compatible class
    files instead of Java 1.3-compatible class files.

* Generation of build file:
  - Changed Java compilation process to produce Java 1.4-compatible class
    files instead of Java 1.3-compatible class files.
  - Expecting API implementation code to be Java 1.4-aware. This means, for
    example, that assertions will be supported, and using the 'assert' keyword
    as an identifier will cause a compilation failure.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.199:

* XINS/Java Server Framework:
  - Changed the handleCall() methods in the API and Function classes to throw
    an IllegalStateException if the object is not currently in the correct
    state.
  - Renamed protected reinitialize() method in class API to
    reinitializeImpl(). Generating package-private reinitialize() method in
    generated APIImpl classes.
  - Added message parameter to logdoc entry 1224.
  - Added message parameter to logdoc entry 1232.
  - Added message parameter to logdoc entry 1424.
  - Removed logdoc entry 1223, logging entry 1224 instead.
  - Removed logdoc entry 1231, logging entry 1232 instead.
  - Removed logdoc entry 1423, logging entry 1424 instead.

* XINS/Java Common Library:
  - Changed class PropertyReaderUtils:
    - Changed class function getIntProperty() to throw a
      MissingRequiredPropertyException if the property is not set.
    - Added class function createPropertyReader() that reads an input stream
      and converts it to a PropertyReader instance.
    - Added class function getRequiredProperty() that throws a
      MissingRequiredPropertyException if the property is not set.
  - Extended class HexConverter: Added overloaded toHexString() methods that
    respectively take a byte[] array, a byte and a short.

* Logdoc:
  - Fixed bug introduced in XINS 0.198. The root cause exception was only
    logged if the logdoc entry was at DEBUG level.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.198:

* XINS/Java Server Framework:
  - Added log entry 1540 for transaction logging.
  - Now storing runtime properties within APIServlet. Allowing package to call
    APIServlet.initAPI(). API instance now gets reference to APIServlet
    instance. Added reinitialize() method to class API, that may be called by API
    function implementations.

* XINS/Java Client Framework:
  - Removed the deprecated getException() method from class CallException.
  - Added log entry 2017 which indicates a call failed due an unspecific I/O
    error.
  - Added log entry 2018 which indicates a call failed due an unexpected error
    condition.
  - Deprecated the existing CallException constructor that takes a String
    message and a Throwable cause in favor of a new one that also takes a
    CallRequest and a TargetDescriptor object.
  - Changed class XINSServiceCaller:
    . Deprecated call(TargetDescriptor,String,Map) in favor of
      call(TargetDescriptor,CallRequest).
    . Deprecated call(String,Map) in favor of call(CallRequest).

* XINS/Java Common Library:
  - Removed reasonFor(Throwable) method and it's brother
    reasonForImpl(Throwable) from class ServiceCaller and from
    LDAPServiceCaller. These methods are no longer used.
  - Removed the getException() methods from the following classes in the
    package org.xins.common.manageable. These methods were was deprecated
    since 0.193, in favor of the Throwable.getCause() method, introduced in
    Java 1.4:
    . BootstrapException
    . DeinitializationException
    . InitializationException
  - Added classes:
    . WhislEncoding
    . ServletRequestPropertyReader
  - Added constructor that takes both a message and a cause exception to the
    following classes:
    . InitializationException
    . ParseException

* Unit tests:
  - Added BasicPropertyReader tests.

* Build and release process:
  - Removed previous version from .version.properties file. It is hardly
    useful and makes things unnecessarily complexity.

* Logdoc:
  - The root cause of any exception is now determined and that is logged
    instead of the passed exception object.
  - Added LogdocSerializable interface.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.197:

* XINS/Java Client Framework:
  - Improved the fail-over decision process slightly. The XINS error codes
    "_InvalidRequest" and "_DisabledFunction" indicate that the request was
    not handled, so if one of those error codes is returned, the call may
    fail-over.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.196:

* XINS/Java Common Library:
  - Moved TimeOutException (introduced in XINS 0.195) from package
    org.xins.common.service to package org.xins.common.
  - Added generic TimeOutController class in package org.xins.common.
  - Now only performing fail-over if the new method shouldFailOver() returns
    true. By default the method returns false, but it may be overridden by
    subclasses.
  - Added log message 3315-3318, which describe the decision making process
    for fail-over, depending on available targets and whether or not fail-over
    is in principle allowed, considering the problem at hand.
  - Added log message 3319: Target descriptor constructed.
  - Added append(boolean) method to class FastStringBuffer.
  - No longer logging reason with log message 3313 in class ServiceCaller. The
    reason should be logged in the subclass. It is virtually impossible to log
    the correct reason in log message 3313 in the correct translation.

* XINS/Java Client Framework:
  - Added new CallException subclasses: ConnectionException,
    ConnectionRefusedException, ConnectionTimeOutException and
    SocketTimeOutException.
  - Added log messages 2012-2015 which describe different causes for a failure
    to call a target XINS API: connection refusal, connection time-out, socket
    time-out and total time-out.
  - Not logging query string with log message 2011 anymore, since POST is used
    and consequently the query string is always null.
  - Changed log message 2008 to log the URL and the function name too.
  - Added INFO-level message 2016 that logs the HTTP status code, with the URL
    and the name of the function being called. If the HTTP status code is not
    in the 2xx range, then this log message will be followed by a 2008 message.

* Build and release process:
  - CSS stylesheet for the Javadoc generated for XINS now no longer specifies
    explicit font names.

* Logdoc:
  - Supporting format="hex" in value-of-param elements in the translation
    files, for integer type parameters.
  - Fixed some bugs in class LogdocStringBuffer that were already fixed in
    class FastStringBuffer, before the latter was copied to create the former.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.195:

* XINS/Java Common Library:
  - Changed TargetDescriptor class: Added connection and socket time-out
    properties. As input for a time-out value non-positive numbers (either
    zero or negative) indicate the respective time-out should be disabled. The
    returned value in such a case is, however, always 0.
    The String returned by toString() is now constructed when the object is
    constructed and cached in a field.
  - Added controlTimeOut() method to the ServiceCaller class.
  - Added ExceptionUtils class with a single class function getRootCause().
    This method determines the root cause of an exception using the method
    Throwable.getCause().
  - Changed reasonFor() in class ServiceCaller to use the root cause for the
    exception as the exception to report the reason for.
  - Changed the algorithm that FastStringBuffer uses to determine the new
    capacity when the current capacity is insufficient. Previously the new
    capacity would be set to the required capacity plus 16. Now it is set to
    the required capacity times 2. This should reduce the number of times a
    FastStringBuffer instance needs to increase the capacity.
  - Introduced TimeOutException class in org.xins.common.service.

* XINS/Java Server Framework:
  - Made the method getResultBuilder() in class FunctionResult
    package-private, since it only needs to be accessed from the package. In
    fact the return type, CallResultBuilder, is package-private already.
  - Slightly improved performance in error reporting code in classes
    InvalidRequestResult and InvalidResponseResult, which represent
    respectively the result code _InvalidRequest and _InvalidResponse.
  - Changed log message 1513. The logged exception is now always the root
    cause exception.

* XINS/Java Client Framework:
  - Changed XINSServiceCaller to use connection and socket time-out as
    defined in the TargetDescriptor class.
  - Changed log message 2007. The logged exception is now always the root
    cause exception.
  - Changed InvalidCallResultException to use ExceptionUtils to store the root
    cause exception of the cause exception and to use the message of that
    root cause exception if no message is explicitly specified.

* Build and release process:
  - Generated Javadoc now links to Java 1.4.2 documentation instead of to the
    Java 1.3 documentation.

* Generation of build file:
  - Generated Javadoc now links to Java 1.4.2 documentation instead of to the
    Java 1.3 documentation.

* Logdoc:
  - Referring to correct local location of Logdoc DTD files. This severely
    speeds up the validation of Logdoc XML files and consequently the
    generation of the Logdoc Java classes, for example.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.194:

* XINS/Java Common Library:
  - Added getStream() method to class HTTPServiceCaller.Result. It returns an
    InputStream for the data returned from the HTTP call.
  - Fixed bug in FastStringBuffer#append(charArray, offset, len) new lenght
    was set to oldLenght + charArray.lenght in stead of oldLenght + len.
  - Removed unused HTTPRequester class. Use the HTTPServiceCaller instead.

* Tests
  - Added FastStringBufferTests.

* Build and release process:
  - If no release is performed, then the .sourceforge.properties is now no
    longer required.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.193:

* XINS/Java Common Library:
  - Fixed bug in GroupDescriptor.hasNext(). Previously it could incorrectly
    return true instead of false.
  - Deprecated getException() method in classes BootstrapException,
    DeinitializationException and InitializationException, in favor of the
    getCause() method in class Throwable, which was introduced in Java 1.4.

* XINS/Java Client Framework:
  - Deprecated getException() method in class CallException, in favor of the
    getCause() method in class Throwable, which was introduced in Java 1.4.

* XINS/Java Server Framework:
  - Outputting log message 1430 instead of 1429. The passed exception is
    always the root cause exception, if there is one. The Throwable.getCause()
    method, introduced in Java 1.4, is used to determine the cause of an
    exception.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.192:

* XINS/Java Client Framework:
  - Setting connection time-out as well. Previously, a socket time-out would
    only be set. The connection time-out is assumed to be the same as the
    socket time-out (specified in the ServiceDescriptor class).
  - Added constructor to AbstractCAPI class that accepts a Descriptor
    instance. This is from now on the preferred way of constructing an
    AbstractCAPI instance. The other constructor, which takes a
    XINSServiceCaller argument, is now marked as deprecated.

* XINS/Java Server Framework:
  - Automatically generating a diagnostic context identifier if none is given
    via the _context parameter. The generated identifier always consists of
    exactly 16 hex digits, which represent a random 64-bit number. It is
    currently not possible to change the algorithm and have a different
    identifier generated.
  - Changed the fallback default log pattern, from:
       %-4c{1} %-6p %m%n
    to:
       %16x %6c{1} %-6p %m%n
  - Fixed bug in the CallResultOutputter class: The 'success' attribute on a
    'result' element would always be set to 'false', even on successful
    execution of the function.
    This bug was introduced in XINS 0.191.
  - No longer warning for servlet containers that implement version 2.2 of the
    Java Servlet specification instead of 2.3. Both are supported.

* Generation of CAPI classes:
  - Added constructor to the generated CAPI class that accepts a Descriptor
    instance. This is from now on the preferred way of constructing a CAPI
    instance. The other constructor, which takes a XINSServiceCaller argument,
    is now marked as deprecated.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.191:

* XINS/Java Server Framework:
  - Slightly improved internal error checking in AccessRule class.
  - Changed CallResultOutputter for backwards compatibility with clients that
    still expect the 'success' and 'code' attributes. These are now returned
    again, alongside the 'errorcode' attribute, if there is an error code.
  - Changed CallResultOutputter to check that all mandatory arguments are
    specified for the output(...) class function.

* XINS/Java Client Framework:
  - Fixed typo in the Javadoc for both UnacceptableCallResultException and
    UnsuccessfulCallException classes.

* XINS/Java Common Library:
  - Slightly improved implementation of HungarianMapper.

* Generation of java code:
  - Improved Javadoc for the getDOMElement() method.

* Build and release process:
  - The release process is aborted if the .sourceforge.properties does not
    exist or if it does not define the required properties.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.190:

* XINS/Java Common Library:
  - Added an append(boolean) method to the LogdocStringBuffer class. This is
    needed in order to properly support the 'boolean' type in Logdoc.
  - Removed unused private no-arg constructor from class
    org.xins.common.types.List.

* Generation of build file:
  - Added commons-httpclient.jar and jakarta-oro.jar to the classpath for the
    creation of the javadoc.
  - The create targets now create XML files with the encoding set to UTF-8.

* Generation of specification documentation:
  - The XML encoding is now showed in the example output section.
  - If an example result has a result code that requires some output
    parameters but the example doesn't define them, the generation fails.

* Specification:
  - Removed the "success" attribute from the "example" element for functions.
  - Added the elements "input-example" and "output-example" in the "example"
    element. The "example-value" element is now deprecated.
  - Added a "pcdata" element to be able to set PCDATA content in an element
    of the data section.

* Logdoc:
  - Changed the logdoc domain for common from org.xins.util to
    org.xins.common.

* Libraries:
  - Changed checkstyle.jar to the match the checkstyle-all-3.4.jar instead of
    checkstyle-3.4.jar.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.189:

* Build and release process:
  - Check for the required directories before making a release.
  - The default dependencies directory has changed from "depends" to the
    project home directory.

* XINS/Java Common Library:
  - Added the static methods today() in Date and now() in Timestamp.
  - Added find(Object) method to class ExpiryFolder. The difference with the
    get(Object) method is that the latter extends the lifetime of the matching
    entry.

* XINS/Java Client Framework:
  - Removed the unused CallRequestParser class.

* Generation of build file:
  - Fixed bug #985218. The index.html and css are now generated or copied in
    in the correct directory.
    This bug has been in XINS since 0.188.

* Libraries:
  - Updated Checkstyle from 3.2 to 3.4.

* Logdoc:
  - Added support for the type 'boolean'.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.188:

* XINS/Java Common Library:
  - The classes Int8, Int16, Int32 and Int64 are not final anymore as they
    need to be extended when a defined type specify a minimum or a
    maximum.
    This bug has been in XINS since version 0.185.

* Specification:
  - Added the possibility to have an output section in result codes.

* Generation of build file:
  - The java files in the combined directory are removed if the impl.xml
    file has changed.
  - The create-rcd target doesn't create the value attribute for the result
    code anymore.
  - Added the DTD declaration for the creation of the build.xml.
    The build.xml file is now much faster to generate.
  - The create-logdoc creates the logging xml files in the correct directory.
    This bug has been in XINS since version 0.180.
  - Fixed the generation of the logdoc for an API using the new directory
    structure.
    This bug has been in XINS since version 0.180.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.187:

* XINS/Java Common Library:
  - If the LDAP path cannot be found, the LDAPServiceCaller return an empty
    QueryResult with isAuthenticated() returning false.
  - Fixed Javadoc in QueryResult.
  - Fixed: HTTPServiceCaller now also passes the arguments.
    This bug has been in XINS since version 0.116.

* Generation of build file:
  - The generated java files are removed if the impl.xml file has changed.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.186:

* XINS/Java Server Framework:
  - Removed some unused imports.
  - Removed the references to Log4j as it was replaced with logdoc.
  - Close the stream that read the runtime configuration file.
  - Renamed result code DisabledFunction to _DisabledFunction.
  - Added the logging of the CallResult arguments when a call fails.
  - The XML result is now sent in UTF-8 encoding format.

* XINS/Java Common Library:
  - Set the adjustment of the ExpiryFolder size in the doorman lock.
  - Decrease the size of the ExpiryFolder only if a value was removed.
  - Removed unneeded empty constructors.
  - Removed public modifiers for interfaces as it's the default.

* XINS/Java Client Framework:
  - Removed the references to Log4j as it was replaced with logdoc.
  - CallRequestParser closes the StringReader after its content is parsed.
  - ResultParser closes the StringReader after its content is parsed.

* Generation of specification documentation:
  - The names for the enumeration type are also printed in the generated HTML.
  - Fixed a bug that prevented to create the index when at least one API uses
    the new directory structure.
    This bug has been in XINS since version 0.169.

* Generation of build file:
  - Fixed incorrect targets classes and wars generated when at least one API
    uses the new directory structure.
    This bug has been in XINS since version 0.169.
  - Recreate the build.xml when an impl.xml file has changed.

* Changed email address of Ernst de Haan to ernst.dehaan@nl.wanadoo.com.

* Removed some TODOs done.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.185:

* XINS/Java Server Framework:
  - Fixed bug that existed since 0.179. All standard result codes were from
    then on supposed to start with an underscore. However, there were still
    references to the 'InternalError' result code. This has now been fixed to
    '_InternalError'.
  - Changed FunctionResult class to improve documentation and style slightly.

* XINS/Java Common Library:
  - Fixed a bug in FastStringBuffer where the method append(char[]) did not
    update the length of the FastStringBuffer.
    This bug existed since 0.8.
  - SF.net bug #973251: Fixed a bug in HexConverter where the toHexString(...)
    methods overwrote the content of the FastStringBuffer when it was not
    empty.
    This bug existed since 0.72.
  - Added the missing static toString(...) methods for the Int8 type.
    This bug existed since 0.56.
  - The fromString method of EnumType now returns an Item object instead of a
    String.
  - The toString method of EnumType now requires an Item object instead of a
    String.
  - Added the _list type.
  - Added the _set type.
  - Added a toString(Object) method to the types int8, int16, int32 and int64.
  - Improved log message generated when a queue time-out occurs in the Doorman
    class.

* Specification:
  - Added the elements int8, int16, int32 and int64 to the type XML file.
    The elements accept the min and max attributes.
  - Removed the value attribute for the result codes. The name attribute will
    be used for XINS 1.0.

* Generation of specification documentation:
  - Fixed a bug that did not generate the link to the environment with the
    new directory structure.
    This bug existed since 0.183.

* Generation of build file:
  - The create-api target now adds the api element automatically to the
    xins-project.xml file.
  - The create-function target now adds the function element automatically to
    the api.xml file.
  - The create-rcd target now adds the resultcode element automatically to
    the api.xml file.
  - The create-logdoc target now adds the logdoc element automatically to
    the impl.xml.
  - Added the validation of the environments.xml, impl.xml and log.xml.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.184:

* Specification:
  - Set the extends attribute optional for type.
  - Added new types in the DTD.

* Generation of build file:
  - The create-type target doesn't create the extends attribute anymore.

* Generation of Java code:
  - Introduced the extends functionality back as some types did extend
    something else than _text.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.183:

* XINS/Java Server Framework:
  - Fixed broken link in Javadoc.

* XINS/Java Common Library:
  - Set the constructor of Date.Value and Timestamp.Value public.

* Specification:
  - Added <impl> and <environments> elements for apis.
  - Added <logdoc> element for the <impl-java> and <impl> elements.

* Generation of Java code:
  - The generated implementation return by default a new SuccessfulResult
    instead of null.
  - Fixed a bug that prevented the new directory structure to find the defined
    functions.
    This bug has been in XINS since version 0.169.
  - Fixed a bug that didn't take the shared instance with the new directory
    structure.
    This bug has been in XINS since version 0.169.

* Build and release process:
  - Put the logdoc package in a new jar file (logdoc.jar).
  - Put the logdoc javadoc in a new group.

* Generation of build file:
  - Added a "clients" target that builds all the client api's for all the
    projects.
  - Added a ant mapper to copy the type files that changes the first character
    to an uppercase if needed.
  - Set the construction of the war file as last argument for the targets
    server-<api> and all-<api>.
  - The create-api target now asks you if you want to create the
    implementation and define some environments.

* Generation of specification documentation:
  - Added a link to download the client zip file.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.182:

* XINS/Java Client Framework:
  - Added backward compatibility for the result. The method isSuccess() is now
    based on the fact that no errorcode or code is returned.
  - Improved description of 'parameters' argument in class XINSServiceCaller,
    in the call(...) methods.

* XINS/Java Common Library:
  - Added a regression test for the PatternType.

* Generation of specification:
  - Added a text specifying that a result code is returned when an error
    occured.

* Documentation
  - Changed the chapters so that for each subject a HTML page is generated.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.181:

* XINS/Java Common Library:
  - Changed the EnumItem to the old constructor as the static Item are not
    initialized yet when the constructor is invoked.
    This bug has been in XINS since the version 0.180.

* Build and release process:
  - Put the correct license files in the release.
  - Downgraded the oro library to version 2.0.7 because of some
    incompatibilities with Perl5 regular expressions.

* Specification:
  - Removed the extends attribute for the types.
  - Renamed the code attribute in the result to errorcode.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.180:

* XINS/Java Server Framework:
  - Replaced some tabs that were in the generated function with 3 spaces.

* XINS/Java Common Library:
  - The EnumItem generated class now uses the static Item included in the
    class. The method equals() and hashcode don't need then to be overridden.

* XINS/Java Client Framework:
  - Removed files and methods related to the session ID.
  - Removed methods related to the success.

* Generation of build file:
  - Improved the logdoc skeleton used for xins create-logdoc.

* Build and release process:
  - Renamed the depends directory to lib.
  - Moved all jar files in the lib directory.
  - Moved XINS javadoc to a newly created docs directory.
  - Added XINS guide in the release.
  - Added the examples in the release.
  - Added the HTML logdoc pages in the release.
  - Removed caller demo, moved to the new module xins-examples.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.179:

* XINS/Java Server Framework:
  - If the function name is missing or incorrect an _InvalidRequest is now
    returned.
  - Renamed in InvalidRequestResult and InvalidResponseResult the method
    addInvalidTypeForValue to addInvalidValueForType.

* Generation of build file:
  - The client-<api> target now also creates the zip files containing the
    specdocs, the CAPI jar file, the CAPI source code and the CAPI javadoc.
  - The target used to create the project files has been changed to use
    the new directory structure and the 1.0 DTDs.

* Specification:
  - Removed the mapping attribute in <impl> or <impl-java>, the value is
    always "/".
  - Removed the attribute javadir and specdir from the
    xins-project_1_0.dtd.
  - Removed the attribute success from the result, the existence of a result
    code or not is used to know if the result is successful.
    WARNING: This may break compatibility as the XML result now longer returns
             a success attribute.

* Generation of specification documentation:
  - Changed the style.css for the specdocs. It does not explicitly specify
    actual font families (e.g.  Arial, Verdana) anymore. Instead, it specifies
    logical font families (serif, sans-serif). These logical font families are
    mapped to actual font families by the browser.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.178:

* XINS/Java Common Library:
  - Refactored some method in the ExpiryFolder.

* XINS/Java Common Library:
  - ExpiryListener now also passes the folder in the expired method.

* Logdoc
  - Removed Logdoc related to the sessions.

* Build and release process:
  - Removed some unneeded "-prepare" targets.

* Generation of build file:
  - Added a "-load-dtds" target.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.177:

This version includes several incompatibilities with the previous version:
  - All packages org.xins.util has been renamed to org.xins.common.
  - The package org.xins.types has been renamed to org.xins.common.types.
  - The <instance> elements in <impl-java> have now a APIImpl object passed
    in the constructor.
  - The session system has been removed from XINS.

* XINS/Java Server Framework:
  - New description for InvalidRequest result code and InvalidResponse
    result code.
  - Removed all code related to the sessions.
  - The shared instance now receive the APIImpl object in the constructor.

* XINS/Java Common Library:
  - Renamed the package org.xins.types to org.xins.common.types and the
    package org.xins.util to org.xins.common.
  - Added new methods in ExpiryFolder.

* XINS/Java Client Framework:
  - Changed the code to access the new package org.xins.common instead of
    org.xins.util and org.xins.types.
  - Removed all code related to the sessions.

* Generation of build file:
  - Renamed target "specdocs-index" to "index-specdocs".

* Specification:
  - Removed all tags related to the session.

* Logdoc:
  - Removed all dependencies to the package org.xins.common.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.176:

* Specification:
  - A description is now required for each element of a data section.
  - The <param> element has been removed from the <impl-java> element for
    XINS 1.0.
  - Added the DTD for authors.xml, environments.xml and impl.xml.
  - Removed the session related attributes in function_1_0.dtd.

* Generation of build file:
  - Fixed a bug that would put the dependencies jar files in the incorrect
    directory of the war file.
    This bug has been in XINS since version 0.175.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.175:

* Generation of build file:
  - The new directory structure is taken into account also for
    the environments and the impl.xml.

* Specification:
  - Removed the <param> element from the implementation specification.

* Build and release process:
  - The logdoc html pages generated for the client and the common packages are
    now uploaded to xins.sourceforge.net.
  - Added a web page that links to the different logdoc html pages.

* Removed some TODOs done.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.174:

* XINS/Java Server Framework:
  - Removed InvalidParameters and MissingParameters.
  - Standard result codes now starts with a underscore '_' character.

* Specification:
  - The DTD files have been renamed with _1_0_alpha.dtd, the _1_0.dtd files
    no longer contain the deprecated elements and attributes.

* Logdoc:
  - Added logdoc for the client and common packages.

* Generation of build file:
  - The build.xml also accepts the new directory structure.
    The implementation settings are still expected in the api.xml file.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.173:

* XINS/Java Server Framework:
  - Added the framework checks that the output parameters are set correctly
    before returning the CallResult.
  - Added InvalidRequest result code and InvalidResponse result code.
  - All errors are returned if a Request is incorrect or a Response is
    incorrect.

* XINS/Java Common Library:
  - The set() method of BasicPropertyReader now also store properties with
    a null value instead of removing it.
    This means that now if you send a property with no value, it will now be
    present in the PropertyReader with a value null.
  - Added _timestamp type.

* Generation of specification documentation:
  - Updated DTD to be more restrictive.

* Logdoc:
  - Added an HTML page that contains all the entries is also generated.
  - Added the logdoc xml files for the client and common part. Note that the
    files are not used yet in the code.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.172:

* XINS/Java Server Framework:
  - If the parameter is deprecated the javadoc for the Request and Result
    generated classes also is marked as deprecated.
  - Removed deprecated methods in the package org.xins.server.

* XINS/Java Common Library:
  - Implemented the isValidValueImpl() method in class
    org.xins.types.standard.Properties.
  - The _properties type does not allow a single key to be used multiple times.

* XINS/Java Client Framework:
  - HTTP code other than 200 and 201 now throws a CallException.

* Generation of specification documentation:
  - Set some attributes from required to implied for xins-project_1_0.dtd.
  - If api.xml has changed only regenerate index.html and the test forms.

* Generation of build file:
  - If the API doesn't have any result code, the build.xml doesn't try to
    generate the classes.
    This bug has been in XINS since XINS 0.168.
  - All style tasks now have a <xmlcalatog> element to locate the DTDs
    locally.
  - Fixed the clean-<api> target to point to the correct directories.
    This bug has been in XINS since version 0.170.
  - Fixed some problems with the logdoc for the implementation.
    This bug has been in XINS since version 0.171.

* Build and release process:
  - A symbolic link latest is created in the directory javadoc, j2h,
    checkstyle, javadoc-private and logdoc that points to the latest version.
  - Updated build.xml for the new CVS server cvs.sourceforge.net.

* Logdoc:
  - Added the DTD for the logdoc xml files.
  - Added a target create-logdoc to create a basis log.xml with a
    translation-bundle.xml for a specified API.
  - Added the DTD validation for the Logdoc.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.171:

* XINS/Java Common Library:
  - Added the string format for the javadoc for the type _date.

* Generation of specification documentation:
  - If no pattern test is provided in the project, the default one on
    sourceforge.net is provided.
  - Generate the links to the version, the statistics and the settings for
    each environment.
  - Added an anchor to the input parameters, output parameters, elements
    and attributes.

* Build and release process:
  - Updated some javadoc to remove the warning due to links not found.
  - The previous version.prev.minor property in .version.property is
    incremented just before making the release.
  - Included the third party licenses in the release.
  - Removed the upload of the xins jar files to sourceforge.
  - Removed some unused libraries files from the release as well as the
    associated files.
  - Removed the empty directories in the release.

* Added the description of the stylesheets in the header.

* Removed escapepattern.xslt replaced with xml_to_java.xslt and
  package_to_dir.xslt replaced with a translate() call.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.170:

* XINS/Java Server Framework:
  - Renamed some variable in the generated classes to avoid conflict with
    parameter names.
  - The method retrieveSession is also available if the function creates the
    session.
  - If the function creates the session, the session must be in the
    successful result.
  - The methods in Request and Result also uses simple java type when
    possible and not objects. To know if an optional parameter has been set
    there is a boolean isSet<parameter>() method.
  - Removed some unused import.

* XINS/Java Client Framework:
  - Removed some unused import.

* XINS/Java Common Library:
  - Removed some unused import.
  - Added a method getEnumItems() in EnumType.

* Generation of specification documentation:
  - Added more possible elements for api_1_0.dtd, function_1_0.dtd and
    type_1_0.dtd.
  - Update DTD files as the declaration should be on one line.
  - The tranformation now uses the <xsl:output method="html"> which
    produce better html than the xml method.
  - The generated html is now more readable.

* Generation of build file:
  - The specdocs is regenerated if api.xml has changed.
  - The result code generated files are regenerated if any function
    specification has changed.
  - Added the 'help' target that prints a summary of the possible targets.
    This target is now the default target. This target also prints the
    possible APIs.
  - If you compile using 'xins -Ddeprecated=false [target]*' the deprecation
    warnings won't be printed.
  - Renamed the target war-api-<api> to war-<api>, specdocs-api-<api> to
    specdocs-<api> and jar-capi-<api> to jar-<api>.
  - Added a new clean-<api> target.
  - Added to possibility to have a logdoc for the implementation.

* Build and release process:
  - Keep the changes-<version>.txt when making a release.
  - All files are tranformed to the correct line feed before making the
    release.
    This bug has been in the latest release XINS 0.169.
  - The xins.bat files is now release with the correct line feed.
    This bug has been in since the release XINS 0.1.
  - Added a .cvsignore file in the xins root directory so the cvs diff
    doesn't complain when making a release.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.169:

* XINS/Java Server Framework:
  - Enabled the new call framework and removed the old call framework.
  - The _GetStatistics function now support the reset=true argument that
    resets the statistics just after getting them.

* Generation of specification documentation:
  - Added DTD validation before any stylesheet transformation.
  - Set the output elements in the correct order for function_1_0.dtd.

* Build and release process:
  - The CVSROOT argument is added in the cvs tasks in order to be able to
    create a release on Windows.
  - The scp and ssh tasks now use the <scp> and <sshexec> ANT tasks.

* Fixed bug. If the pattern for a pattern type contained a double quote ('"')
  character, then the generated Java classes for that type would not be
  correctly generated and it would not compile.
  This bug has been in the XSLT code (escapepattern.xslt) since XINS 0.1.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.168:

* Generation of specification documentation:
  - Added the version number to the DTD files.

* XINS/Java Server Framework:
  - Fixed translations for log messages 2007 and 2008.
  - Added a new call framework to get the input parameters, to set the
    output parameters and to report a result code.
    This framework is by default disabled in this version because of
    incompatibilities with XINS 0.167 but it can be enabled by changing
    the newCallFramework variable in xins-project_to_ant-build.xslt and
    editing the src/java-server-framework/org/xins/server/Function.java file.

* XINS/Java Common Library:
  - Fixed: Creating a Date from a string threw an IndexOutOfBoundsException
    for the type _date.
    This bug has been in the code since the introduction of the
    Date class in XINS 0.166

* Generation of build file:
  - The build targets creating the APIs, functions, types and result codes
    have been updated to link to the correct DTD, to include the description
    and to rename 'project' with 'api'.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.167:

* Generation of type classes:
  - Supporting '/' (slash) in item names.

* Generation of specification documentation:
  - Slightly impoved display of examples in some browsers.

* XINS/Java Common Library:
  - Implemented toString() method in class Date.Value in package
    org.xins.types.standard.

* XINS/Java Server Framework:
  - Changed log messages 5000 and 5001 to log the query string.
  - Removed unused package-private dueToUnexpected(Throwable) class function
    from class APIServlet.
  - Changed behavior when no access rule list is defined in the runtime
    properties file. Previously all requests would then be allowed. New
    behavior is that all requests are then denied. Removed log messages 4032
    and 4033 as a result of this. Slightly improved description and
    translations for log message 5503.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.166:

* General XINS-related changes:
  - Added support for type _date.

* XINS/Java Common Library:
  - Added support for _date type by means of class
    org.xins.types.standard.Date.
  - Added class function getContext() to class LogCentral. This class function
    returns the current diagnostic context identifier.
  - Removed the following unused packages:
    . org.xins.specs
    . org.xins.tools.security
    . org.xins.util.ant.sourceforge
  - Fixed EnumItem.equals() now returns true if two EnumItem's are from the
    same class, have the same name and the same value.
    This was erroneous since XINS 0.1.
  - Fixed small error in Javadoc comments for fromStringForOptional(String) in
    class org.xins.types.standard.Properties.

* XINS/Java Server Framework:
  - Renamed parameter 'id' to 'sessionID' in log message 5010.
  - Generated logdoc classes are now package-private.

* Logdoc:
  - Logging the sequential counter identifier with a log message.
  - Parameters cannot be called 'id'.
  - Support making generated classes package-private.
  - Changed the generated HTML for a log entry slightly. One of the changes is
    that it is now displayed whether the log entry supports an exception or
    not.

* Generation of build file:
  - Removed the display of the user directory when starting the 'xins' script.

* Generation of specification documentation:
  - Only generating 'Test on' row per example, if at least one environment is
    defined.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.165:

* XINS/Java Server Framework:
  - Changed the following log messages so they log the actual exception in a
    DEBUG message directly following the original log message (normally
    WARNING, ERROR or FATAL): 2004, 2007, 2012, 2024, 2032, 3001, 3002, 3003,
    4001, 4016, 4024, 4030, 5013, 6001, 6007 and 6011.

* XINS/Java Common Library:
  - Fixed @see tag in LogCentral class.
  - Changed SingleEntryMap class, so that the put() method throws an exception
    if the new key does not match the old key.

* Generation of specification documentation:
  - Added the freeze parameter in the api.dtd.
  - Added new possible parameters in the function.dtd.

* Logdoc:
  - Added a note to the generated Logdoc index page, about deciding whether a
    log message should be at the FATAL message.
  - Added support for exceptions. These are always logged at DEBUG level.

* Generation of build file:
  - Moved most of the command executed in the xins script shell files
    to a new make-build.xml ANT script file.
  - The build.xml is now recreated only if some files has been modified.
  - The targets create-project, create-function, create-type and create-rcd
    has been added to create a new project, a new function, a new type or
    a new result code.
  - The types are now regenerated only if a file has changed.
  - Added a new rebuild-<api> that executes a clean before building the
    project.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.164:

* XINS/Java Common Library:
  - Added class LogCentral, with setLocale(String) method.
  - Renamed NoSuchTranslationBundleException to UnsupportedLocaleException.
  - Added inner class LogController in AbstractLog.

* Logdoc:
  - Generating LogController subclass for each Log class.
  - Removed setTranslationBundle() from generated Log class.
  - Moved XML files from src/logdoc to src/logdoc/server.

* Generation of specification documentation:
  - Removed the dependency on rcs. The specification is now created if
    a rcsdate or rcsversion attribute is missing from the type,
    the result code or the function.
    The version number is then replaced with '?.?'.

* Generation of build file:
  - Added a new target server-<api> that builds the war file, the specdocs
    and the javadoc on the server-side.
  - Added a new target client-<api> that builds the jar file and the javadoc
    on the client-side.
  - Added a new target all-<api> that builds the server-side and the
    client-side.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.163:

* XINS/Java Server Framework:
  - Improved Dutch (nl_NL) translation for log message 2026.
  - The recordCall() in FunctionStatistics now returns the duration of the
    call. It replaces the getLastDuration() method introduced in
    XINS 0.162.
    In XINS 0.162 the FunctionStatistics.getLastDuration() may not return
    the duration of the expected function call.

* XINS/Java Common Library:
  - Added missing package.html for org.xins.logdoc.

* Build and release process:
  - Linking to xmlenc 0.43 API docs.
  - The targets "java-client" and "java-server" now use the same common
    target.
  - The version number of the previous release in the .version.properties
    file is also increased when a new release is created.

* Generation of build file:
  - Linking to xmlenc 0.43 API docs.
  - Added the logdoc directory to the release.
    This causes the compilation of XINS to fail when it was done from the
    downloaded package.
    This was probably erroneous since XINS 0.154.

* Generation of specification documentation:
  - Added the DTD's in the release.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.162:

* XINS/Java Server Framework:
  - Added support for meta-function _GetLogStatistics.
  - The statistics which were in Function are now in a separate
    FunctionStatistics class. This class has also a method to update the
    statistics.

* XINS/Java Common Library:
  - Added package org.xins.logdoc. Including classes AbstractLog,
    LogStatistics and NoSuchTranslationBundleException.

* Logdoc:
  - Generating counter per log entry.
  - Logdoc Log classes now extend org.xins.logdoc.AbstractLog.
  - Not generating NoSuchTranslationBundleException, but using the
    org.xins.logdoc package.

* Generation of specification documentation:
  - Added DTD's for to project, API, type, result code and function XML files.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.161:

* Dependencies:
  - Updated to xmlenc 0.43.

* XINS/Java Server Framework:
  - Documented the Throwable exception thrown by call(...) method in the
    generated fundament class for a function.
  - Changed levels for log message entry 3005 from DEBUG to INFO (Logging
    subsystem has been properly initialized)
  - Changed fallback default log message output pattern to:
    "%-4c{1} %-6p %m%n" (without the quotes).
  - Improved translations for log message 5018.
  - Added log entry group runtime.http. Moved log messages 5000 and 5001 in
    this group.

* XINS/Java Common Library:
  - Added the SingleEntryMap class. This class is the implementation of a
    Map that can only include one entry. Some unit tests testing this class
    have also been added.
  - Added an AbstractPropertyReader class that provides a default
    implementation of a few methods for the different existing
    PropertyReader implementations.

* Logdoc:
  - Simplified definition of FATAL log level.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.160:

* XINS/Java Server Framework:
  - Changed levels for log message entries:
    . 2000 from DEBUG to NOTICE (Bootstrapping XINS/Java Server Framework)
    . 2001 from ERROR to FATAL (Unable to bootstrap XINS/Java Server Framework
      due to unexpected state)
    . 2004 from ERROR to FATAL (Unable to get system property that defines the
      runtime properties file to use, due to a security restriction)
    . 2013 from DEBUG to INFO (API is session-oriented)
    . 2014 from DEBUG to INFO (API is not session-oriented)
    . 2021 from ERROR to FATAL (Manageable object could not be bootstrapped
      due to a missing required property)
    . 2022 from ERROR to FATAL (Manageable object could not be bootstrapped
      due to an invalid property value)
    . 2023 from ERROR to FATAL (Manageable object could not be bootstrapped)
    . 2024 from ERROR to FATAL (Manageable object could not be bootstrapped
      due to an unexpected exception)
    . 2029 from ERROR to FATAL (Function could not be bootstrapped due to a
      missing required property)
    . 2030 from ERROR to FATAL (Function could not be bootstrapped due to an
      invalid property value)
    . 2031 from ERROR to FATAL (Function could not be bootstrapped)
    . 2032 from ERROR to FATAL (Function could not be bootstrapped due to an
      unexpected exception)
    . 4007 from DEBUG to NOTICE (Runtime properties file modified)
      Re-initializing XINS/Java Server Framework)
    . 4008 from DEBUG to INFO (Runtime properties file watch interval not
      specified, using fallback default)
    . 4013 from ERROR to FATAL (API could not be initialized due to a missing
      required property)
    . 4014 from ERROR to FATAL (API could not be initialized due to an invalid
      property value)
    . 4015 from ERROR to FATAL (API could not be initialized)
    . 4016 from ERROR to FATAL (API could not be initialized due to an
      unexpected exception)
    . 4021 from ERROR to FATAL (Manageable object could not be initialized due
      to a missing required property)
    . 4022 from ERROR to FATAL (Manageable object could not be initialized due
      to an invalid property value)
    . 4023 from ERROR to FATAL (Manageable object could not be initialized)
    . 4024 from ERROR to FATAL (Manageable object could not be initialized due
      to an unexpected exception)
    . 5000 from ERROR to INFO (Received HTTP request with invalid method)
    . 5004 from INFO to DEBUG (Access rule does not match)
    . 5006 from INFO to DEBUG (Setting session attribute value)
    . 5007 from INFO to DEBUG (Resetting session attribute)
    . 5008 from INFO to DEBUG (Getting session attribute value, value is not
      null)
    . 5009 from INFO to DEBUG (Getting session attribute value, value is null)
  - Improved description of messages 4000 and 4001.
  - Added a new group: 'Access rule matching', with category
    org.xins.server.runtime.acl. Moved messages 5002-5005 to this group and
    changed their IDs to 5500-5503.

* Logdoc:
  - Changed description/definition of FATAL level. Previously the description
    was: "Indicates an error that keeps the whole application from
    functioning. The application must be restarted in order to recover from
    the problem." This has been rephrased to: "Indicates an error that keeps
    the whole application from functioning. Intervention from an operational
    manager is required to solve the problem. The application may even have to
    be restarted."

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.159:

* XINS/Java Server Framework:
  - For each 'param' element in the output section a responder.param() call is
    automatically inserted when an example [Function]Impl.java file is
    generated.
  - Removed log message 4017 (XINS/Java Server Framework has been
    initialized).
  - Using log message 4018 also for the first initialization, instead of 4017.
  - When re-initializing the framework, the check interval is now checked
    before (instead of after) the API is re-initialized.
  - Added support for _context parameter. If this parameter is set, it will be
    used to set it as the NDC (nested diagnostic context). The nested
    diagnostic context can be output in the log. With the pattern layout,
    use %x.
  - Added the _ResetStatistics meta function. This function set all the
    statistics to their initial values.

* XINS/Java Client Framework:
  - Added an abstract getXINSVersion() method in the AbstractCAPI class that
    returns the XINS version with which the CAPI class has been built.
  - If an NDC (nested diagnostic context) is set, then it will automatically
    be passed on to other XINS APIs via the _context parameter.

* Generation of CAPI classes:
  - Generating implementation for getXINSVersion() method, defined in
    AbstractCAPI class.

* Generation of specification documentation:
  - Added links to allow the execution of the examples listed for a function
    on a specific environment.

* Generation of build file:
  - Automatic generation and display of the MD5 after the creation of the WAR
    file.

* Dependencies:
  - Updated to xmlenc 0.42.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.158:

* XINS/Java Server Framework:
  - Completely converted to logdoc-approach.
  - Interface Responder and implementation in CallContext: The method
    param(String,String) now allows a null or empty value. In that case
    nothing is output.
  - Slightly changed the ID's of the groups in the log. The only impact is
    that the names of the generated files changed.
  - Fixed Dutch (nl_NL) translation of log message 5010.
  - Added log message 5011 (Received session ID is invalid).
  - Added log message 5012 (Received session ID is valid but unknown).
  - Added log message 5013 (Exception thrown during function call).
  - Added log message 5014 (Call to session-less function succeeded).
  - Added log message 5015 (Call to session-oriented function succeeded).
  - Added log message 5016 (Call to session-less function failed).
  - Added log message 5017 (Call to session-oriented function failed).
  - Added log message 5018 (Failed to convert session ID to character string).
  - Changed level of log message 6001 from ERROR to WARNING.
  - Completed removing all statically shared Logger instances from Library
    class.
  - Deprecated Function.getLogger().

* Dependencies:
  - Some JAR files were commited in CVS as ASCII files, this is fixed.
  - Updated to Jakarta Commons HttpClient 2.0.
  - Updated to Jakarta Commons Net 1.1.0.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.157:

* Shell script 'xins':
  - Removed support for -deployment option (introduced in XINS 0.79).

* Generation of specification documentation:
  - Indenting text 'This function supports no input parameters', to have a
    more consistent layout.

* XINS/Java Common Library:
  - Added PropertyReaderUtils class.
  - Changed BootstrapException and InitializationException classes: Changed
    access level of the constructor that takes a 'Throwable' argument from
    package-private to public.

* XINS/Java Server Framework:
  - Removed support for default functions (introduced in XINS 0.78).
  - Removed support for deployments (introduced in XINS 0.79).
  - Trimming API class name property value.
  - Consistently logging an error first and then setting the state.
  - Always throwing a ServletException if the bootstrap failed. This fixes the
    issue that the servlet container assumes the servlet is initialized while
    it is not.
  - Consistently not passing any information to a ServletException when it is
    thrown.
  - Reviewed and changed log messages quite drastically.
  - Using logdoc-approach throughout the complete APIServlet class.
  - Added some log messages. For example, now logging every request with the
    request method (GET, POST, HEAD, OPTIONS) and the IP address (log messages
    5000 and 5001).
  - Deprecated all logging-related methods in CallContext.
  - Deprecated isResponseValidationEnabled() in class API.
  - Deprecated getAttributes() in class Session.

* Logdoc:
  - Changed names of files.
  - Changed some element and attribute names.
  - Changed the descriptions for a few log message entries.
  - Supporting a 'nullable' attribute for 'param' elements in log.xml.
  - Supporting a 'type' attribute for 'param' elements in log.xml.
  - Changed a number of translations for the en_US locale.
  - Changed a number of translations for the nl_NL locale.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.156:

* Generation of specification documentation:
  - First copying CSS and then generating specdocs for the API.
  - Supporting deprecation of element attributes.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.155:

* XINS/Java Server Framework:
  - Introducing 'logdoc', a system for documenting and managing log messages.
    The purpose is that all log messages are both documented and managed
    external to the source code and that log messages can be output in
    different locales. The locale can be changed at runtime.
    To generate the logdoc HTML documentation, run 'ant logdoc-html'.
    To change the locale at runtime, change the 'org.xins.server.log.locale'
    property in the runtime properties file (typically 'xins.properties').
    The logdoc files are in: src/logdoc.
  - Class Function now derives from class Manageable.
  - Function instances are now bootstrapped, (re-)initialized and
    deinitialized by the API.
  - Changed the log level of some log messages from INFO to DEBUG, since they
    are not interesting for operational people.
  - Changed the bootstrapping, initialization and deinitialization of
    manageable objects in the API class so that normal exceptions are not
    reported as 'unexpected'.
  - Fixed bug in APIServlet class. The only allowed state in
    init(ServletConfig) was INITIAL, while a few others are also acceptable.
    For example, if at startup the initialization failed due to a missing
    required property in the runtime properties file, then the framework would
    not recover from this.

* Generation of specification documentation:
  - Now one style.css per API, so that if only the specdocs/[api] directory
    can be read by a client, for example because of an access restriction,
    then the pages will still be displayed correctly.

* Build and release process:
  - Generating and uploading Java2HTML documentation to the website.
  - Generating and uploading logdoc reports to the website.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.154:

* XINS/Java Server Framework:
  - An IP filter expression can be in the form "a.b.c.d" instead of
    "a.b.c.d./32".
  - Improved logging for conditions in which an unexpected exception is
    caught.

* Dependencies:
  - Updated to xmlenc 0.41.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.153:

* XINS/Java Server Framework:
  - Completed ACL support. The access rule list is to be defined in a runtime
    property 'org.xins.server.acl'. If this property is not set in the runtime
    configuration file, then all requests are allowed. This behavior is for
    backwards-compatibility and will be changed in the future, so that if the
    property is not defined, then no request will be allowed.
    The property value must match the format for an access rule list
    descriptor. This format is documented here:
    http://xins.sf.net/javadoc/0.153/org/xins/server/AccessRuleList.html
  - Renamed class function parseFilter() to parseIPFilter() in class IPFilter.
  - Renamed class AccessRuleParser to AccessRuleList.
  - Extended AccessRuleList and AccessRule classes.
  - Changed level for log message indicating whether API is session-oriented
    from INFO to DEBUG, since this is not of interest to non-developers.

* XINS/Java Common Library:
  - Changed the level for the log messages in class FileWatcher from DEBUG to
    INFO, since these messages may be of interest to non-developers.
  - Changed the TargetDescriptor class to allow a tilde (~) in a URL.

* Generation of test forms:
  - Added links for disabling and enabling a specific function on a specific
    environment.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.152:

* XINS/Java Common Library:
  - Fixed bug in LDAPServiceCaller class, in the logging of authentication
    attempts. The error was that if DEBUG log messages are disabled, then ANY
    authentication attempt will generate an ERROR message.
    Changes:
    . Fixed the bug, so the message is now reflecting reality
    . Changed the log level from ERROR to INFO for failed authentications
    . Changed the log level from DEBUG to INFO for succeeded authentications
    This bug has been in the code since the introduction of the
    LDAPServiceCaller class in XINS 0.115
  - Added SimplePatternParser class.

* XINS/Java Server Framework:
  - Completed the IPFilter class. It is yet unused, however.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.151:

* Fixed some Checkstyle-reported issues.

* XINS/Java Common Library:
  - Added examples to Javadoc class comments for class DescriptorBuilder.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.150:

* XINS/Java Common Library:
  - Moved MissingRequiredPropertyException and InvalidPropertyValueException
    from org.xins.util.manageable to org.xins.util.collections.
  - InvalidPropertyValueException now supports 'reason' property.
  - DescriptorBuilder (in org.xins.util.service) now uses exceptions from
    org.xins.util.collections package.

* XINS/Java Server Framework:
  - Started development on ACL support.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.149:

* Added package.html for package org.xins.util.manageable.

* Fixed typo in INFO log message from API.

* XINS/Java Server Framework:
  - If the state is not READY, then an HTTP error code will be returned.
    Depending on the actual state it will either be '500 Internal Server
    Error' or '502 Service Unavailable'. This has been documented in the
    Javadoc comments for the APIServlet class.
  - If the state is READY, but no function name is specified, or if the
    function name does not identify an existing function, then the '404 Not
    Found' HTTP response code is returned.

* XINS/Java Common Library:
  - Added '_' and '.' to the pattern for url matching in the TargetDescriptor.
    This will allow urls such as http://blah.blah.com/some_file.html
  - Fixed @link in class Manageable.
  - Removed unused @param in class InitializationException.

* Removed standard 'MissingFunctionName' and 'NoSuchFunction' result codes.
  Instead, the API will return a '404 Not Found' HTTP response code.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.148:

* Generation of specification documentation:
  - Fixed bug that happened when an API defines no types but it does define
    result codes. All result codes would be converted to HTML using the XSLT
    template for types instead of the one for result codes.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.147:

* Added j2h.jar to depends/compile. See: http://www.java2html.com/.

* XINS/Java Common Library:
  - Replaced class org.xins.util.LifespanManager with class
    org.xins.util.manageable.Manageable.

* XINS/Java Server Framework:
  - Added support for OPTIONS (HTTP request method).
  - Class API now derives from class Manageable.

* Dependencies:
  - Updated to Jakarta Commons HttpClient 2.0rc2.
  - Updated to xmlenc 0.40.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.146:

* XINS Javadoc API documentation now linked to online Jakarta Commons
  HttpClient API documentation.

* XINS/Java Server Framework:
  - Method init() in LifespanManager subclasses can now throw any kind of
    exception, the method is declared to throw Throwable. Conclusively, class
    InitializationException could now be marked package-private.
  - Slightly changed logging of lifespan manager bootstrap and initialization
    errors (in class API).
  - Removed org.xins.server.LifespanManager class (moved to XINS/Java Common
    Library).
  - Servlet now explicitly supports the GET, POST and HEAD HTTP request types
    only. With the HEAD request no XML output is returned. Requests with a
    different method get a '405 Method Not Allowed'.

* XINS/Java Common Library:
  - Small improvements to the org.xins.util.service package, such as new and
    improved Javadoc comments, improved exception messages, improved exception
    handling, etc.
  - Renamed ServiceDescriptor class to TargetDescriptor.
  - Removed methods getByName(String) and getByValue(String) in EnumType.
    These had been deprecated since XINS 0.109.
  - Changed CallFailedException to add a rule: At least one target must have
    failed.
  - Improved performance of SafeRandom in case a warning is logged.
  - Renamed method iterateServices() in Descriptor to iterateTargets().
  - Added getTargetCount() method to class Descriptor (and subclasses).
  - Added org.xins.util.LifespanManager class (moved from XINS/Java Server
    Framework).

* XINS/Java Client Framework:
  - Added XINSServiceCaller class.
  - Moved CallResult class to XINSServiceCaller.Result, to resolve clash with
    CallResult class in package org.xins.util.service.
  - Removed setCallAtConstruction(boolean) method in class
    ActualFunctionCaller.
  - Added 'String message' argument to the NoSuchSessionException constructor.

* Generation of CAPI classes:
  - Shared sessions are no longer supported. The support for it was untested
    and incomplete, so it has been removed completely, to simplify the code.
    Support may be re-added in in the future.
  - Generating correct <function>Result classes for output parameters that
    contain dots ('.'), by replacing each dot with an underscore ('_') in the
    field and method names.

* Upgraded from Jakarta ORO 2.0.7 to 2.0.8.

* Including JUnit 3.8.1 JAR file in depends/compile.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.145:

* Moved jakarta-oro.jar from depends/runtime to depends/compile_and_runtime,
  where it belongs.

* Generation of build file:
  - Now correctly including dependency JAR files in Javadoc classpath.

* XINS/Java Common Library:
  - Logging each buffer increase in FastStringBuffer.

* XINS/Java Server Framework:
  - Changed log category for a function to
    "org.xins.server.apis.<api>.<function>", where <api> is the name of the
    API and <function> is the name of the function.
  - Changed internal logging categories to be all lower case.

* XINS/Java Client Framework:
  - NoSuchSessionException now extends CallException.

* Generation of CAPI classes:
  - Not throwing TypeValueException anymore, but NoSuchSessionException
    instead, from session-based function call methods.
  - Fixed bug in generated call<function>() method in CAPI class. It
    would previously throw a NullPointerException if there was no data
    element and if there was a data element, it would return it directly,
    without cloning it.
  - Fixed bug in generated getDataElement() in <function>Result class. It
    would previously throw a NullPointerException if there was no data
    element.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.144:

* XINS/Java Server Framework:
  - Renamed SessionID to SessionIDType.
  - Renamed BasicSessionID to BasicSessionIDType.
  - BasicSessionIDType now generates random session IDs.
  - Fixed bug in APIServlet that caused a InterruptedIOException when a
    configuration file was reloaded. Had to change FileWatcher for this as
    well.
  - Logs now always refer to session using hex session ID, not sometimes as
    decimal and sometimes as hex.

* XINS/Java Common Library:
  - Fixed small bug in ExpiryFolder that could cause a NPE.
  - Changed FileWatcher class to allow setting of the interval from the
    listener methods.

* Generation of CAPI classes:
  - Fixed small bug in generation of CAPI class that caused compiler errors.

* General XINS-related changes:
  - Session creation functions are now allowed to return output parameters.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.143:

* XINS/Java Client Framework:
  - Changed log messages in ActualFunctionCaller constructor.
  - Implemented toString() in ActualFunctionCaller.
  - Changed CallTargetGroup to retry not only if the call failed, but also if
    the result code was DisabledFunction.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.142:

* Generation of specification documentation:
  - Shortened title of link to other function to the first line of the
    description for that function.

* XINS/Java Common Library:
  - Continued work on org.xins.specs package.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.141:

* XINS/Java Client Framework:
  - Fixed bug in ActualFunctionCaller.getCRC32String(). The returned string
    now starts with 8 zeroes again. This issue was probably introduced in
    release 0.137.

* XINS/Java Common Library:
  - Added org.xins.specs package for specification of API components, like
    functions, types and result codes.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.140:

* XINS/Java Client Framework:
  - Added NoSuchSessionException.
  - Changed ActualFunctionCaller to log URL and CRC-32 at construction time.

* Generation of CAPI classes:
  - Changed generated CAPI class: Throwing NoSuchSessionException if the
    ActualFunctionCaller is null.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.139:

* XINS/Java Client Framework:
  - Storing members in AbstractCompositeFunctionCaller in an unmodifiable
    list.
  - Fixed bug in ActualFunctionCaller that was introduced in 0.137. It caused
    the returned CRC32 to be invalid.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.138:

* Fixed 'xins -version' on systems without .sourceforge.properties file.

* XINS/Java Common Library:
  - Added class function isHexDigit(char) to class HexConverter.
  - Implemented URLEncoding.decode(String) without using java.net.URLDecoder.

* XINS/Java Client Framework:
  - Checking that no 2 ActualFunctionCallers in a CallTargetGroup can have the
    same URL checksum.

* XINS/Java Server Framework:
  - If the APIServlet is not in the READY state, then the InternalError code
    is returned with a _message output parameter that describes the problem.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.137:

* XINS/Java Common Library:
  - Fixed bug in class function toHexString(int) in class HexConverter.

* XINS/Java Client Framework:
  - Improved ActualFunctionCaller class:
    . If a parameter key is null or empty string, it is ignored.
    . Parameter keys cannot start with an underscore.
    . Parameter keys are now properly URL-encoded.
    . If a parameter value, converted to a string is null or empty string,
      then it is ignored.
    . Storing CRC32 in an int.
    . Added method ping()
    . Added method getRemoteXINSVersion()
    . Never calling _NoOp in constructor. The application can use ping() if
      appropriate.

* Generation of CAPI classes:
  - Generating package.html.

* Generation of type classes:
  - Generating package.html.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.136:

* XINS/Java Client Framework:
  - Copied all getter methods from CallResult to UnsuccessfulCallException,
    except isSuccess(). Deprecated getCallResult() in the latter class.
  - Added class CallIOException that extends CallException and wraps around an
    IOException.
  - Added class UnacceptableCallResultException that extends CallException and
    accepts an optional reason only.

* Generation of CAPI classes:
  - Call methods now only throw CallException.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.135:

* XINS/Java Client Framework:
  - By default not calling _NoOp at construction of ActualFunctionCaller.

* Generation of test forms:
  - Using 'function' parameter instead of '_function' parameter again. This is
    due to the fact that old APIs may not have switched to '_function' yet,
    while the newer APIs still support 'function.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.134:

* XINS/Java Client Framework:
  - Fixed bug. Now correctly URL encoding parameter values.

* XINS/Java Common Library:
  - Fixed bug in the toString() method in the Properties class, in the types
    package. Previously it did not include any ampersands.

* Generation of CAPI classes:
  - Fixed bug. Not throwing NPE if an optional parameter for a function call
    is not provided.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.133:

* Generation of build file:
  - Printing timestamp after WAR creation.

* Slightly improved urlencode.xslt. Added '^' symbol.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.132:

* XINS/Java Client Framework:
  - Sending 'function=FunctionName' instead of '_function=FunctionName' for
    backwards compatibility.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.131:

* XINS/Java Common Library:
  - Added PropertyReaderConverter class.

* XINS/Java Client Framework:
  - Added AbstractCAPI class.

* Generation of CAPI classes:
  - CAPI classes now extend org.xins.client.AbstractCAPI

* The xins -version command now prints Java and Ant version directly from the
  XINS build file.

* Generation of build file:
  - Previously, the generated build file would assume that an API defines at
    least one type. Otherwise the build would abort in an unexpected way.
    Fixed that.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.130:

* XINS/Java Server Framework:
  - Fixed a bug that caused the _GetSettings function to fail.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.129:

* XINS/Java Server Framework:
  - Starting the configuration file watch thread only after the API has been
    initialized, during servlet initialization.
  - Reading the configuration file check interval from the configuration file
    self, at servlet initialization and at reinitialization.

* XINS/Java Common Library:
  - Changed FileWatcher class to add end() method that stops the thread.

* Building XINS:
  - Simplified target names by removing '-framework' suffixes.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.128:

* XINS/Java Server Framework:
  - Made Function.getAPI() public.
  - Renamed CallContext.getSuccess() to isSuccess() and made it public.

* Generation of Java Fundament classes:
  - Fixed bug that caused CallContext.createSession() to be called, even if
    the function failed.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.127:

* XINS/Java Server Framework:
  - Re-initialization fixed and tested. It now positively works.

* XINS/Java Common Library:
  - Introducing SourceForge AddRelease task that automates the procedure of
    uploading a distribution file, adding a release to the SourceForge package
    and then adding the distribution file to this release.
    This is work in progress.

* Dependencies:
  - Added Jakarta Commons Net 1.0.0 to compile-time dependencies, for the
    SourceForge AddRelease task.

* Building XINS:
  - File .sourceforge.properties is now expected to be in the user home
    directory. It should contain the properties 'sf.user' and 'sf.password'.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.126:

* Updated to xmlenc 0.39.

* Added TODO file.

* There is now only a single package: xins-VERSION.tar.gz, which contains
  source code, Javadoc, JAR files, etc.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.125:

* XINS/Java Server Framework:
  - Rewrote the initialization procedure. Introduced more states and split up
    between build-time configuration (called 'bootstrapping') and
    runtime-configuration ('initialization'). There is now no principal
    difference between initialization and re-initialization anymore.
  - Response validation is now a runtime configuration setting.
  - Changed the output format of _GetSettings.
  - Changed LifespanManager from interface to abstract class.
    WARNING: This will break existing code that is based on the
             LifespanManager interface introduced in XINS 0.120.
  - Changed Log4J categories. There is now one category for the bootstrap
    phase, one for the initialization and re-initialization and one for the
    shutdown.
  - Consistenly using the following terms for different kinds of configuration
    settings in Javadoc comments, inline comments, log messages and the output
    of _GetSettings:
    . System properties:  Set by passing arguments to the JVM when starting it.
                          Retrieved using System.getProperty().
    . Build properties:   Stored in the web.xml file and retrieved from the
                          ServletConfig object using
                          ServletConfig.getInitParameter(String).
    . Runtime properties: Stored in the XINS configuration file.
  - Fixed some Checkstyle-reported issues.

* XINS/Java Client Framework:
  - Simplified implementation of CallResultParser slightly.`
  - Fixed some Checkstyle-reported issues.

* XINS/Java Common Library:
  - Changed FileWatcher class: A null listener is now declined by the
    constructor. This fixes the issue that a null listener would cause
    NullPointerExceptions at runtime.
  - Fixed some Checkstyle-reported issues.

* Generation of test forms:
  - Parameter specifying function name has been renamed from 'function' to
    '_function'. One step closer to completely switching to '_function'.

* Generation of specification documentation:
  - Function specifications: No longer showing success column in result code
    table.
  - Function specifications: Simplified algorithm to determine if an example
    is successful. If a result code is specified, then the example is not
    successful.

* Changed README file to explicitly state that Apache Ant 1.5.3 is required.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.124:

* Generation of Java fundament classes:
  - Fixed a bug that kept the APIImpl class from being initialized properly.

* XINS/Java Server Framework:
  - Not completely failing if the API could not be initialized at startup.
    Instead of a 'fatal' message, an 'error' message is logged. The
    configuration file is still checked every 10 seconds.

* XINS/Java Client Framework:
  - Exception class UnsuccessfulCallException now constructs a message. If
    there is a result code, it will be in the message.
  - Improved exception message for ParseException in CallRequestParser class.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.123:

* Generation of Java fundament classes:
  - Fixed problem in api_to_java.xslt, introduced in XINS 0.122.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.122:

* Generation of Java classes for types:
  - Fixed bug in generated getItemByValue(String) method.

* XINS/Java Server Framework:
  - Improved Javadoc documentation of a few classes, like APIServlet and API.
  - Improved error-checking and logging.
  - Removed Singleton interface.
    WARNING: This may break existing code.
  - Changed the interface of LifespanManager in an incompatible way. Warning:
    WARNING: This may break existing code.
  - Supporting re-initialization of a LifespanManager.
  - Successful result codes are no longer supported. Removed the corresponding
    constructors and methods from the ResultCode class.
    WARNING: This may break existing code.

* XINS/Java Client Framework:
  - Improved Javadoc for MultipleIPAddressesException class.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.121:

* The XINS JAR file is now built to run on Java 1.3+ VMs. Java 1.2 is no
  longer supported.

* XINS/Java Server Framework:
  - Rewrote the initialization procedure and most of the log messages.
  - Added sensibility checks.
  - Soft requirement is now that the Java VM be started with a property
    "org.xins.server.config" pointing to a configuration file. This
    configuration file is automatically reloaded every 10 seconds.
  - The _NoOp function now also works if the API is in the process of shutting
    down.

* XINS/Java Common Library:
  - Added class org.xins.util.io.FileWatcher.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.120:

* XINS/Java Server Framework:
  - Changed and improved logging. All classes in org.xins.server now log to
    only 2 categories: org.xins.server.LIFESPAN and org.xins.server.RUNTIME.
    Logging the build-time XINS version now, too. Using the log level FATAL if
    the servlet fails to initialize. Logging the location of the Log4J
    configuration file using the INFO instead of the DEBUG level.
  - Responder interface now extends Log interface too. Use this for logging.
  - Replaced Singleton interface with LifespanManager interface. The Singleton
    interface and all methods that accept a Singleton instance are marked as
    deprecated.

* XINS/Java Client Framework:
  - Fixed a typo in the Javadoc comment for parse(Reader) in class
    FunctionCallerParser.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.119:

* XINS/Java Server Framework:
  - Added CallResult, CallResultBuilder, BasicCallResult and
    CallResultOutputter classes.
  - Refactored the core. Including APIServlet, API, CallContext and Function
    classes. Now using a CallResult-based approach.
  - Removed ResponseValidator class.
  - Removed UNININITIALIZED state in class ResponderStates.
  - None of the methods in the Responder interface now throws an IOException
    anymore.
  - Improved accuracy of the duration in the function statistics.
  - In the past MissingSessionID, InvalidSessionID and UnknownSessionID were
    ignored in the logging and function statistics keeping. This is now fixed.
  - Removed InvalidSessionIDException, MissingSessionIDException and
    UnknownSessionIDException classes.
  - Improved logging. Always including call ID.

* Generation of specification documentation:
  - Fixed link to API owner mail address.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.118:

* XINS/Java Common Library:
  - Changed the ServiceDescriptor class. Improved the URL pattern to accept
    hyphens.

* Generation of specification documentation:
  - Added session-related result codes. Only displaying appropriate result
    codes.

* Generation of test forms:
  - Displaying input field for session identifier for session-based functions.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.117:

* XINS/Java Common Library:
  - Refactored MandatoryArgumentChecker. Simplified. No longer using
    MissingArgumentException.
  - Removed MissingArgumentException class.
  - Catching unexpected Perl5Matcher exceptions. If such an unexpected
    exception is caught, the concerning string is considered to be invalid for
    the type. An error will be logged.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.116:

* XINS/Java Common Library:
  - GroupDescriptor: Now correctly iterating over services randomly. Ordered
    iterating has been implemented but is yet untested.
  - ServiceCaller: Improved logging.
  - ServiceDescriptor: Improved (fixed) URL matching pattern.
  - DescriptorBuilder: Logging exception if ServiceDescriptor cannot be
    constructed.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.115:

* Added Jakarta Commons HttpClient JAR file (commons-httpclient.jar) to
  dependencies (compile- and runtime).

* XINS/Java Common Library:
  - Added class NonASCIIException to class org.xins.util.text.
  - Added decode(String) method to org.xins.util.net.URLEncoding.
  - Changed encode(String) method in org.xins.util.net.URLEncoding to throw a
    NonASCIIException when appropriate.
  - Moved service descriptor classes from package org.xins.util.sd to package
    org.xins.util.service.
  - Property 'timeOut' in class ServiceDescriptor is now an int instead of a
    long.
  - Added Service class and friends in org.xins.util.service, meant to easen
    and standardize implementations of service calling functionality that
    supports load-balancing, failover and time-outs.
  - Added HTTPService class in org.xins.util.service.http, as the first
    implementation of a Service, new-style. In time, this class will replace
    the HTTPRequester class and part of the FunctionCaller /
    ActualFunctionCaller / CallTargetGroup hierarchy.
  - Added LDAPService class in org.xins.util.service.ldap, another
    implementation of a Service, new-style.
  - Class TypeValueException now properly generates an exception message when
    it is constructed.
  - Added a TypeValueException constructor that takes an additional argument:
    'additionalInfo'.

* XINS/Java Client Framework:
  - UnsuccessfulCallException and InvalidCallResultException now both derive
    from a new exception class CallException.

* All Java classes:
  - No longer throwing InternalError, but throwing Error instead. The
    description of the InternalError class clearly states the error pertains
    to a Java Virtual Machine internal error. So InternalError is not
    appropriate here.

* Generation of Java type classes:
  - Set reloadstylesheet='true' for the type_to_java conversions.
    This is to work around a bug in Java 1.4.1.
    Note that this doesn't work in Ant versions prior to 1.5.2.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.114:

* XINS/Java Server Framework:
  - Added method getName() to API class.
  - ResultCode constructor now logs a warning if it is marked as successful.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.113:

* Generation of Java type classes:
  - Moved type_to_java.xslt from src/xslt/java-fundament to
    src/xslt/java-types.

* Generation of CAPI classes:
  - Refactored some of the XSLT.
  - Fixed some small issues in the Javadoc comments of the generated CAPI
    classes.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.112:

* Generation of CAPI classes:
  - Changed the contract of the generated getItemByValue(String) methods for
    enum types to behave like the Type.fromString(String) method. A null
    argument will cause null to be returned. An unrecognized value will cause
    a TypeValueException.
  - Applied some type-related fixes and improvements in the XSLT. Output
    parameters now also support enumeration types.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.111:

* Generation of CAPI classes:
  - The Javadoc for the generated Item classes for enum types now link to
    their instances.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.110:

* Generation of CAPI classes:
  - If a function returns only a data section and no output parameters, then
    the generated calling method for that function will return an
    org.jdom.Element object directly.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.109: (based on XINS 0.108)

* Generation of CAPI classes:
  - Main class is now called 'CAPI' instead of 'API' to reduce confusion with
    other classes named 'RemoteAPI', 'API' or 'APIImpl'.
  - Applied some refactorings to make the XSLT easier to read and maintain.
  - Now using <enumtype>.Item classes as the type for input parameters that
    denote enumeration types.
    WARNING: This may break existing code that expects a java.lang.String
             object instead.
  - Result classes generated for functions that return a data element now
    define a method getDataElement() that returns an org.jdom.Element object
    instead of a list of the contained elements.
    WARNING: This may break existing code that expects a java.util.List
             instead.

* Generation of fundament classes:
  - Now using <enumtype>.Item classes as the type for input parameters that
    denote enumeration types.
    WARNING: This may break existing implementation code that expects that the
             signature of the call method accepts a java.lang.String instead.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.108.1:

* Fixed XINS build.xml file: The 'bin-package' target now correctly depends on
  'java-client-framework' target.

* Generation of Java type classes:
  - Set reloadstylesheet='true' for the type_to_java conversions.
    This is to work around a bug in Java 1.4.1.
    Note that this doesn't work in Ant versions prior to 1.5.2.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.108:

* Improved performance of Java type class generation.

* Now including type classes in CAPI JAR files.

* Generation of CAPI:
  - Return output parameter value directly if there is only one output
    parameter.

* Refactored quite some XSLT.

* Generation of specification documentation:
  - Footer now contains XINS version.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.107:

* Generation of specification documentation:
  - Improved URL encoding of the links to the test forms.

* Generation of API classes:
  - Now supporting properties types.

* Generation of CAPI classes:
  - Fixed bug so that Result classes are now properly generated for functions
    that only return a data section and no output parameters.

* Fixed Javadoc generation for both generated API classes and CAPI classes.
  Both now include the generated classes for the types in a separate package
  per API.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.106:

* Added standard type _properties.

* XINS/Java Common Library:
  - Added class Properties to represent new type _properties.
  - Added class PropertiesPropertyReader.
  - Added fast URL encoding/decoding functions in new class
    org.xins.util.net.URLEncoding.
  - Added method checkValue(String) to class Type.

* Generation of specification documentation:
  - Improved generated specifications for types.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.105:

* XINS/Java Client Framework:
  - Class ActualFunctionCaller: Added static setCallAtConstruction(boolean)
    method that controls if an ActualFunctionCaller that is being constructed
    actually checks if the API is up or not. Default remains true.

* XINS/Java Common Library:
  - Added org.xins.util.sd package.

* Generation of specification documentation:
  - Function parameter in examples is now called '_function' instead of
    'function'.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.104:

* Updated to xmlenc 0.37.

* XINS/Java Client Framework:
  - MultipleIPAddressesException: Improved message. Storing host name and
    addresses.
  - At construction time, ActualFunctionCaller checks if the API is actually
    up or not, and logs this. It does this by calling the _NoOp function on
    it.
  - Improved stability of ExpiryFolder. Fixed bug in counting of members.

* Generation of API docs and XINS API docs now correctly link to Apache Ant
  API docs at nagoya.apache.org.

  *** NOTE ***
  The memory leak reported about in the XINS 0.97 release notes has probably
  been fixed in 0.98.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.103:

* Generation of Java CAPI classes:
  - Supporting data sections.

* Generation of buildfile:
  - Now set window and document title for generated Javadoc documentation for
    both API implementation and call interface classes.

* Fixed generated Javadoc documentation so that XINS version is correct again.
  This was probably erroneous since XINS 0.85.

* Linking generated Javadoc to xmlenc 0.36.

* XINS/Java Common Library:
  - Added class field EMPTY_LIST to class CollectionUtils.

* Linking XINS API documentation to xmlenc 0.36 API documentation.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.102:

* XINS/Java Server Framework:
  - Added getAttributes() to class Session.
  - Added standard function _PerformGC that calls System.gc(). See:
    http://java.sun.com/j2se/1.3/docs/api/java/lang/System.html#gc()

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.101:

* XINS/Java Common Library:
  - Fixed bug in FastStack class: Changed clear() method so it unlinks all
    objects so they can be garbage collected.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.100:

* XINS/Java Server Framework:
  - No longer failing at initialization if build time and host are not set.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.99:

* Fixed bug that caused XINS projects that had deployment-required set to
  false fail when no deployment was defined.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.98:

* XINS/Java Server Framework:
  - Statistics collection for functions: Creating a new FastStringBuffer every
    time, not synchronizing on shared buffers anymore. Used to have one
    FastStringBuffer for successful, and one for unsuccessful calls.
  - Recreating CallContext object each time, not caching per thread.
  - Added property for en-/disabling response validation. Default is now
    disabled. To enable it, add the following to the <impl-java> section in
    api.xml:

    <param name="org.xins.server.responseValidation">true</param>

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.97:

* XINS/Java Common Library:
  - Class Doorman: Changed the way failed thread synchronization checks are
    dealt with if strict thread synchronization checking is disabled (i.e. set
    to loose).
    When the current writer attempts to enterAsReader(), then
    leaveAsWriter() is first called. It is assumed that for some reason it was
    not called, although it should have been.
    Vice versa, when a current reader attempts to enterAsWriter(), then
    leaveAsReader() is first called.
    Furthermore, now resetting the interrupted state in enterAsReader() and
    enterAsWriter(), since the thread may have been interrupted between the
    Thread.sleep(long) call and the acquiry of the _currentActorLock lock.
    Hopefully this decreases the error sensitivity.
    Also: Throwing Error instead of IllegalStateException.

* XINS/Java Server Framework:
  - Added method reinit(PropertyReader) to interface Singleton.
    WARNING: This may break existing code.

  *** WARNING ***
  There may be a 'memory leak' in this release. It is expected that this issue
  exists at least since release 0.65.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.96:

* XINS/Java Common Library:
  - ExpiryStrategy now allows explicit stopping of timer thread.

* XINS/Java Server Framework:
  - API.destroy() now explicitly stops ExpiryStrategy timer thread.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.95:

* XINS/Java Server Framework:
  - Class CallContext: Changed log level from ERROR to DEBUG for invalid
    session ID.
  - Class API: Added getTimeZone() and getCurrentSessions().
  - Class Function: Made field _api protected.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.94:

* XINS/Java Common Library
  - Explicitly marked ExpiryStrategy.TimerThread as daemon thread. This may
    fix a shutdown issue on Solaris.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.93:

* XINS/Java Commons Library:
  - Added logging of expired entries in class ExpiryFolder.
  - Fixed 4 bugs in class Doorman.
  - Improved logging in class Doorman.
  - Allowing strict thread synchronization checking to be enabled or disabled
    in class Doorman. If disabled, some checks will result in a warning being
    logged instead of an exception being thrown.
  - Made class org.xins.util.text.DateConverter Java 1.3-compliant.

* XINS/Java Server Framework:
  - Fixed API class so it runs under Java 1.3. Needs Java 1.4+ to compile,
    though.
  - Fixed queue time-out for the collection of sessions to 5 seconds.

* This release must still be compiled with Java 1.4+, but at runtime this
  release is compatible with Java 1.3+.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.92:

* Improved stability of Doorman.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.91:

* XINS/Java Server Framework:
  - More output from _GetStatistics:
    . number of available processors
    . free heap memory, see:
    . total allocated heap memory
    . maximum heap memory
  - Improved logging output and exception messages in class Doorman.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.90:

* XINS/Java Common Library:
  - Doorman: Fixed bug. Improved logging.
  - ExpiryFolder: Improved stability in case of out-of-memory errors.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.89:

* XINS/Java Server Framework:
  - Added 'startup' attribute to 'initialization' tag in output of function
    _GetSettings.
  - Function _GetStatistics returns "N/A" instead of "NA" if certain
    information is not available.
  - Function _GetSettings no longer returnes the startup time. That is now
    returned from _GetStatistics.

* XINS/Java Common Library:
  - Added DateConverter that produces a human-readable date.

* Printing time stamps in format 'yyyy.MM.dd HH:mm:ss.SS' everywhere. Not
  displaying milliseconds since Epoch anymore. This applies to _GetStatistics
  and to the build time returned by _GetSettings.

* This release must be compiled with Java 1.4+.

* At runtime this release is compatible with Java 1.4+ only.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.88:

* XINS/Java Server Framework:
  - Fixed the class description for MissingSessionIDException and
    UnknownSessionIDException.
  - Expecting Log4J config file to be specified in property
    'org.apache.log4j.config'.
  - Replacement strings should now be between square brackets ('[' and ']')
    instead of curly ones ('{' and '}').
  - Added a default function _NoOp that does nothing but return
    <result success="true" />.
  - Function _GetSettings no longer returns a <build /> section, since all the
    properties are already in the <initialization /> section.
  - Fixed bug in logging of deployment ID.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.87:

* XINS/Java Server Framework:
  - Changes to function _GetSettings:
    - All properties are returned as a <property /> elements.
    - New section <build /> added, containing deployment identifier, build
      host and build time stamp.
    - Renamed section <init-settings /> to <initialization />.
    - Renamed section <system-properties /> to <runtime />.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.86:

* Added support for _xslt parameter. When specified, the returned XML will
  contain a processing instruction in the form:

     <?xml-stylesheet type="text/xsl" href="{URL}"?>

  in browsers like Internet Explorer and Mozilla this will result in the
  specified XSLT to be applied to the result XML, client-side. Note that the
  appropriate Security settings need to be applied if the XSLT is from a
  different source than the source XML.

* XINS/Java Server Framework:
  - Fixed bug in CallContext.fail(ResultCode).
  - Added CallContext.fail(ResultCode,String). The seconds parameter is the
    message to include in the output.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.85:

* Improved the automatic release process. Introduced .version.properties.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.84:

* Generation of test forms:
  - Fixed a bug in the generated SELECTs for enums.

* Supporting deployment-required="true" in api.xml, in the element
  api/impl-java.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.83:

* Generation of CAPI classes:
  - Fixed bug. All generated function calling methods now correctly check
    result.isSuccess(). If it returns false, then an UnsuccessfulCallException
    is thrown.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.82:

* XINS/Java Common Library:
  - Added class Replacer to package org.xins.util.text.

* XINS/Java Server Framework:
  - Supporting replacements in servlet initialization settings.
  - Supporting setting 'log4j.configFile' in api.xml. Will trigger a
    PropertyConfigurator.configureAndWatch().

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.81:

* XINS/Java Server Framework:
  - Class APIServlet: Improved logging and applied some small improvements.
  - Function _GetSettings now returns system properties as well, not just the
    initialization settings.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.80:

* Fix minor typo in Javadoc comment (class FunctionCallerParser).

* Simplified and improved logging in class APIServlet.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.79:

* Shell script 'xins' has been improved. These changes have not been applied
  to xins.bat (yet):
  - support added for -deployment option
  - supports for -bypass option that disables the regeneration of the Ant
    buildfile. The buildfile must already exist.

* Shell script 'xins' now distinguishes between SystemV and BSD systems. Based
  on this, either 'echo -n "text"' or 'echo "text" \c' is used when no newline
  should be output.

* XINS/Java Server Framework:
  - Logging deployment ID if any was specified at build time.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.78:

* XINS/Java Server Framework:
  - Added support for default functions.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.77:

* Generation of web.xml file:
  - Indentation now enabled.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.76:

* Supporting the attribute 'mapping' in the impl-java tag in the api.xml file.
  This results in a custom url-pattern being set in the generated web.xml
  file.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.75:

* XINS/Java Server Framework:
  - Displaying XINS version when initializing.
  - Session-based methods now check if the API is really session-based. If it
    is not, then they throw an IllegalStateException.
  - A warning is logged if APIServlet has to initialize Log4J without
    initialization settings.

* Updated to xmlenc 0.36.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.74:

* XINS/Java Common Library:
  - Added class BooleanConstants.

* XINS/Java Client Framework:
  - Added class SessionIDSplitter.
  - Added method getActualFunctionCallers() to interface
    CompositeFunctionCaller and to CallTargetGroup (which implements that
    interface.)
  - Added method getActualFunctionCallerByCRC32(String) to interface
    FunctionCaller and to classes CallTargetGroup and ActualFunctionCaller.

* Generation of CAPI classes:
  - Now supports sticky sessions, based on splitting client session ID in
    identifier for target API and server-side session identifier.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.73:

* Resolved some Checkstyle warnings.

* Generation of Javadoc API documentation for XINS projects can no longer link to
  -dev versions of XINS. When determining the version of the online XINS API
  documentation to link to, the -dev part is removed.

* XINS/Java Common Library:
  - Renamed class org.xins.util.LongUtils to org.xins.util.text.HexConverter.
    Extended functionality of HexConverter to support converting ints to hex
    strings.

* XINS/Java Server Framework:
  - Small performance improvements by switching to using FastStringBuffer in
    some occasions (instead of the String append operator +).

* XINS/Java Client Framework:
  - CallResult now has a link to an optional ActualFunctionCaller instead of a
    FunctionCaller.
    WARNING: This may break existing code.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.72:

* Format of api.xml: Added boolean attribute 'shared-sessions' to
  'session-based' tag. Default value is 'false'.

* XINS/Java Client Framework:
  - Added getActualFunctionCaller(long) to class CallTargetGroup that
    retrieves an ActualFunctionCaller by CRC-32 checksum of its URL.
  - Added class NonSharedSession.

* Generation of CAPI classes:
  - Returning NonSharedSession from functions that create a session within
    APIs that do not have 'shared-sessions' set to 'true'.

* Small Javadoc improvements.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.71:

* Added missing Javadoc comments for some private members.

* Configuration of time-out duration and precision is now done in api.xml.

* XINS/Java Common Library:
  - No longer allowing initial queue size to be set for ExpiryFolder. This is
    overkill.
  - ExpiryStrategy class now logs a debug message at construction.

* XINS/Java Server Framework:
  - API class now gets and interprets session time-out duration and precision.
  - Maximum queue wait time (for the ExpiryFolder containing the sessions) is
    automatically set to half of the session time-out duration.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.70:

* Added session-based tag to api.xml. Needs to be set for session-based APIs.
  A session-based API is defined as an API that contains at least one
  session-based function.
  The specification documentation now marks session-based APIs and functions.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.69:

* Fixed 22 Checkstyle warnings.

* XINS/Java Client Framework:
  - Removed call(String,String,String,Map). from class CallTargetGroup.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.68:

* Improved Javadoc comments.

* XINS/Java Common Library:
  - Removed unused class NoSuchEntryException.
  - Added package.html for package org.xins.util.threads.
  - Fixed bug in standard type classes Int8, Int16, Int32 and Int64, method
    fromStringForOptional(String).

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.67:

* XINS/Java Server Framework:
  - Including Java version in output of _GetVersion.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.66:

* XINS/Java Server Framework:
  - Slightly improved logging for session-based functions.
  - Added InvalidSessionIDException.
  - Removed Session.touch(). It is not needed, since the ExpiryFolder will
    take care of this.
  - Added some missing Javadoc comments to class API.

* XINS/Java Common Library:
  - Added ArrayIterator class.
  - Added FixedArraySet class.
  - Added IndexedMap interface.
  - Added Doorman class.
  - Rewrote ExpiryFolder, based on Doorman class.
  - Removed ExpiryValidator, it was never used.
  - Added ExpiryListener interface.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.65:

* Improved descriptions for Library classes.

* XINS/Java Common Library:
  - Made ExpiryFolder class final instead of abstract.
  - Made ExpiryStrategy constructor public.
  - Fixed bug in LongUtils that cause all session-based functions to fail.
    This bug was introduced in release 0.63 (performance of session ID
    parsing).

* XINS/Java Server Framework
  - Now using ExpiryFolder for storage of sessions. They still don't expiry
    yet, though.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.64:

* Added Library class to both XINS/Java Client Framework and to the XINS/Java
  Common Library

* XINS/Java Servlet Framework:
  - Initializing at startup.
  - Extra state checks in API class.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.63:

* XINS/Java Server Framework:
  - Optimized generated java-fundament classes.
  - Improved performance of session ID parsing.
  - Deprecated NoSuchActualFunctionCallerException.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.62:

* Removed deprecated class org.xins.server.RemoteAPI.

* Fixed bug in output of _GetStatistics that caused total unsuccessful
  duration to be displayed as last unsuccessful duration.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.61:

* Improved generated CAPI classes. This includes a fix for unsuccessful call
  results. These now actually cause an UnsuccessfulCallException.

* XINS/Java Server Framework:
  - Synchronizing on sessions so a single session cannot be used in 2
    functions in parallel.
  - Improved logging.

* Fixed bug in XSLT for generating CAPI classes.

* Improved output with result code MissingParameters.
  Instead of outputting the following (pre-0.61):

     <result success="false" code="MissingParameters" />

  the output would now be, for example:

     <result success="false" code="MissingParameters">
        <data>
           <missing-param name="account"/>
           <missing-param name="password"/>
        </data>
     </result>

* Improved output with result code InvalidParameters.
  Instead of outputting for example the following (pre-0.61):

     <result success="false" code="InvalidParameters" />

  the output would now be, for example:

     <result success="false" code="InvalidParameters">
        <data>
           <invalid-value-for-type param="password" type="password"/>
        </data>
     </result>

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.60:

* Improved automatic generation of session identifiers in API implementation.
  Now marking functions that create session IDs with the attribute
  createsSession='true'.

* Automatically determining XINS version when generating Javadoc API docs.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.59:

* Replaced 'classes-capi-XXX' targets with 'jar-capi-XXX' targets.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.58:

* Fixed bug in generated Java CAPI classes. Now correctly sending session ID
  with session-based function calls.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.57:

* Introduced quite some changes in the type classes in XINS/Java Common
  Library.

* Improved session ID generation in XINS/Java Server Framework. Session ID now
  has the following format: xxxx:yyyy, where xxxx is a 16-digit hex string
  representing the startup time of the API, and yyyy is a 16-digit hex string
  representing a counter. Example value: "000000f622238ca6:0000000000000000".

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.56:

* Slightly improved logging in XINS/Java Server Framework:

* Improved generated CAPI classes, now support sessions.

* Test forms now display a SELECT box for booleans with the options: empty,
  'true' and 'false'.

* In generated specified documentation: No longer displaying standard result
  code as acronym.

* Removed (unused) support for 'dependson' tags in the function
  specifications.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.55:

* XINS/Java Server Framework:
  - Improved logging.
  - Improved initialization and shutdown of XINS/Java Server Framework. Added
    Singleton interface and InitializationException.
  - Slightly improved performance of detection of missing or unknown session
    ID in XINS/Java Server Framework.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.54:

* XINS/Java Server Framework:
  - Fixed bug in CallContext.getSession().
  - Relying on APIServlet.destroy() to call API.destroy() at shutdown. Removed
    shutdown handler from API class.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.53:

* Upgraded to JDOM 1.0b9.

* XINS/Java Server Framework:
  - Added getAttribute(String), setAttribute(String,String) and touch() to
    class Session.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.52:

* XINS/Java Server Framework: Added session support.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.51:

* XINS/Java Common Library: Added class FastStack.

* XINS/Java Server Framework:
  - Performing initialization in a compiler-safe method. If an instance has
    not init(Properties) method, this will be logged and ignored.
  - Performing deinitialization at shutdown using a destroy() method in the
    instances registered with an API.
  - Duplicate attributes per element are now checked.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.50:

* Added ResponseValidator to XINS/Java Server Framework. Duplicate parameters
  are now detected and properly cause a failure.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.49:

* Fixed bug in link to pattern test form (for pattern types).

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.48:

* Hid some of the protected interface of CallTargetGroup, because only classes
  in the same package can derive from this class.

* Fixed bug in statistics output, produced by function _GetStatistics.
  Previously the output was like this (incorrect):

     <function name="Login">
        <successful count="1" average="351">
           <min start="351" duration="351"/>
           <max start="1056118455354" duration="351"/>
           <last start="1056118455354" duration="351"/>
        </successful>
        <unsuccessful count="1" average="6">
           <min duration="6"/>
           <max duration="6"/>
           <last start="1056119178887" duration="6"/>
        </unsuccessful>
     </function>

  Now the output will be like this (correct):

     <function name="Login">
        <successful count="1" average="351">
           <min start="1056118455354" duration="351"/>
           <max start="1056118455354" duration="351"/>
           <last start="1056118455354" duration="351"/>
        </successful>
        <unsuccessful count="1" average="6">
           <min start="1056119178887" duration="6"/>
           <max start="1056119178887" duration="6"/>
           <last start="1056119178887" duration="6"/>
        </unsuccessful>
     </function>

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.47:

* Added 'Caller' demo program. Use target 'demo-caller' to execute it, specify
* the request file and the config file, for example:

     $ ant demo-caller -Drequest=request.xml -Dconfig=config.xml

  with config.xml for example as follows:

     <group type="ordered">
        <group type="random">
           <api url="http://127.0.0.1:22/"    />
           <api url="http://127.0.0.1:80/"    />
           <api url="http://127.0.0.1:30002/api" />
        </group>
        <group type="random">
           <api url="http://localhost:30004/api" />
           <api url="http://localhost:30005/api" />
        </group>
     </group>

  and request.xml for example as follows:

     <request function="_GetFunctionList" />

* XINS/Java Client Framework:
  - Introduced CallRequest and CallRequestParser.
  - Changed FunctionCaller interface to accept a CallRequest.
  - Implementated RandomCallTargetGroup and OrderedCallTargetGroup.
  - Removed RoundRobinCallTargetGroup, it is not used.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.46:

* Added first (limited) set of unit tests.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.45:

* XINS/Java Client Framework: Introduced FunctionCallerParser that parses an
  XML configuration document that defines CallTargetGroups and
  ActualFunctionCallers. An example of such a configuration is:

      <group type="ordered">
         <group type="round robin">
            <api url="http://apihost0.company.com:2087/auth.pl" />
            <api url="http://apihost1.company.com:2087/auth.pl" />
         </group>
         <api url="http://ext-apihost1.company.com:2088/auth.pl" />
      </group>

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.44:

* Major change to the way ActualFunctionCaller works: DNS lookups are now
  performed at construction time. No longer are DNS names accepted that
  resolve to multiple IP addresses. Use CallTargetGroups for this.

* Fixed problem in specdocs/type_to_html.xslt. It used the template
  'urlencode' without including urlencode.xslt.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.43:

* AbstractCompositeFunctionCaller now actually implements
  CompositeFunctionCaller. This fixes a bug in CallTargetGroup, method
  getActualCallTarget(String).

* Added RandomCallTargetGroup and RoundRobinCallTargetGroup classes (no-op).

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.42:

(none)

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.41:

* Fixed the 'xins' shell script to work on non-FreeBSD operating systems. Only
  using 'mktemp' on FreeBSD, using an unsafer method of creating temporary
  files on other unices.

* Fixed XSLT error in src/xslt/specdocs/type_to_html.xslt.

* Slightly improved 'javadoc' target in XINS build file

* Extended XINS/Java Client Framework:
  - Added support for sessions.
  - Renamed class RemoteAPI to ActualFunctionCaller. Deprecated RemoteAPI.
  - Added class AbstractFunctionCaller.
  - ActualFunctionCaller now extends AbstractFunctionCaller.
  - Added class AbstractCompositeFunctionCaller (extends
    AbstractFunctionCaller).
  - Added class CallTargetGroup (extends AbstractCompositeFunctionCaller).

* Improved performance of HTTPRequester (used by RemoteAPI /
  ActualFunctionCaller) by switching to using an unsynchronized
  FastStringBuffer instead of the normal synchronized StringBuffer.

* Improved performance of MandatoryArgumentChecker by letting
  MissingArgumentException use FastStringBuffer instead of StringBuffer.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.40:

* Properly encoding plus characters ('+') while URL encoding the link to the
  test form for a type.

* Storing (un)successful min/maximum start timestamp and displaying it in the
  result of _GetStatistics. In the old situation, the output was similar to
  this:

      <data>
         <function name="MyFunction">
            <successful count="124" average="132" min="13" max="830">
               <last start="1055333674847" duration="196" />
            </successful>
            <unsuccessful count="9" average="244" min="94" max="340">
               <last start="1055333620172" duration="250" />
            </successful>
         </function>
      </data>

  In the new situation the output is similar to this:

      <data>
         <function name="MyFunction">
            <successful count="124" average="132">
               <min start="1055332820374" duration="13" />
               <max start="1055330282035" duration="830" />
               <last start="1055333674847" duration="196" />
            </successful>
            <unsuccessful count="9" average="244">
               <min start="1055200307218" duration="94" />
               <max start="1055231843442" duration="340">
               <last start="1055333620172" duration="250" />
            </successful>
         </function>
      </data>

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.39:

* Made shell script 'xins' executable.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.38:

* Removed DataUnavailableException from XINS/Java Client Framework.

* Added standard types: _text, _boolean, _int8, _int16, _int32, _int64.

* Refactored some of the function_to_html.xslt files.

* Moved org.xins.types package to XINS/Java Common.

* The generated java-fundament classes now support Java data types other than
  String.
  WARNING: This may break existing function ...Impl classes.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.37:

* Worked around the problem with Ant when calling 'xins -version'.

* Fixed 'xins -version' on Windows systems.

* Fixed problem: Included JAR files in bin package again.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.36:

* Renamed xins.sh to xins.

* Added CAPI targets for projects. CAPI stands for Client-side Application
  Programming Interface. Data sections are not supported yet though.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.35:

* Fixed some Checkstyle warnings.

* Added ExpiryValidator interface to xins-common.

* Added RemoteAPI to xins-client-framework.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.34:

* Fixed XINS-based project build problems introduced in 0.33.

* Generating separate xins-common.jar.

* Introduced ExpiryFolder (untested).

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.33:

* Renamed xins.jar to xins-server.jar.

* Added XINS/Java Client Framework. Translates into a xins-client.jar.

* Having groups in the Javadoc API documentation set.

* Added JDOM 1.0b8 to dependencies.

* Added HTTPRequester CollectionUtils classes in java-common.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.32:

* If a value for an input parameter is empty, then don't check the type for
  that parameter.

* Added shutdown hook. If the JVM is being shut down, then all request to
  regular functions will get an InternalError result code.

* Changed the names of the responder states to match the field names.

* Added support for generating Javadoc API docs per XINS API.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.31:

* Fixed bug in CallContext.endResponse(). If it was called more than once,
  then it would throw an exception.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.30:

* Fixed bug in CallContext.fail(ResultCode).

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.29:

* Responder: Added method fail(ResultCode).

* Upgraded to xmlenc 0.33.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.28:

* FastStringBuffer: Supporting appending byte, short, int, long, float and
  double numbers.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.27:

* Disabled deprecation warnings and debug info when building a release.

* Enabled javac optimizations.

* Switched from Checkstyle 2.x to Checkstyle 3.0.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.26:

* Storing links to result codes in API instance.

* Code cleanup.

* In function specification documentation:
  - Only displaying result code in example if there is one.
  - Showing and linking to API result codes.
  - Renamed 'code' attribute to 'name' in resultcode-ref element type.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.25:

* Fixed bug introduced in 0.23 that causes all functions declared in the API
  to be invisible.

* Code cleanup.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.24:

* Separating words with an underscore in generated name of result code in API
  class.

* Removed class DefaultReturnCodes (deprecated since 0.15).

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.23:

* Generating static final fields for result codes in API class.

* Using Singleton pattern for API subclasses.

* ResultCode class is now public.

* Cleaned up generated code in the API class.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.22:

* Improved message when logging succeeded calls.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.21:

* Fixed bug in successful call logging.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.20:

* Cleaned up fallback initialization of Log4J.

* Class APIServlet directly implements Servlet interface, no longer derives
  from HttpServlet class.

* Fixed bug: Also logging successful calls again.

* Result codes are now in external .rcd files.

* Changed term 'return code' to 'result code' in quite some locations.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.19:

* Fixed NPE in CallContext.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.18:

* Logging different types of InvalidParameters errors.

* Linking to Jakarta Commons Logging API documentation.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.17:

* Greatly improved logging. Using Jakarta Commons library. Added it to the
  dependencies.

* Moved handleCall(CallContext) from API class to
  Function class.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.16:

* Fixed problem introduced in 0.15 that keeps the generated java-fundament
  code from compiling.

* Made _log field in the Function class available to subclasses.

* Logging missing parameters.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.15:

* Javadoc API documentation now links to Log4J API documentation.

* Added startResponse(boolean) and startResponse(ResultCode) to replace the
  now deprectated startResponse(boolean,String).

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.14:

* The files CHANGES, COPYRIGHT and README are now in both distribution files.

* Supporting associating returncodes with an API.

* Refactored parameter getting and checking: Moved the functionality from API
  class to Function class, to the handleCall(CallContext) method.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.13:

* Added function _GetSettings that returns the initialization settings.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.12:

* Putting dependencies in source distro.

* Refactored statistics-related code.

* Putting current time in function _GetStatistics output.

* Fixed bug, now resetting success indication and return code.

* Logging function calls.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.11:

* Supporting _function as the parameter specifying the function name.

* Version of xmlenc now in _GetVersion function output.

* Configuring Log4J to print to the console if no configuration is specified
  in the servlet inititialization properties

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.10:

* Generating private Javadoc API documentation.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.9:

* Improved Javadoc documentation.

* Added support for Checkstyle 2.x. See: http://checkstyle.sourceforge.net/

* Returning XINS version from function _GetVersion, not from _GetStatistics
  anymore.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.8:

* Pooling CallContext instances per thread.

* Using custom FastStringWriter for improved performance.

* Including XINS version in output of generic function _GetStatistics.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.7:

* Refactorings applied to create less objects during a function call.

* Flushing output stream in APIServlet instead of API class.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.6:

* Keeping track of last successful and last unsuccessful call start and
  duration times. Returning these from _GetStatistics.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.5:

* Copying resources from source directory to classes/ directory in WAR file.
  This is useful for resources like .properties and .xml files.

* Fixed bug: Skeleton .java files are now actually generated.

* Refactored quite some code in the API, Function and CallContext classes.

* Gathering statistics, which can be retrieved by calling _GetStatistics.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.4:

* Only generating files if the concerning APIs, function and types are
  explicitly mentioned in the concerning lists in xins-project.xml or api.xml.

* Generating skeleton .java files if function implementation files do not
  exist.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.3:

* Now including dependency JAR files in generated JAR file (xins.jar)

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.2:

* Generated APIImpl classes now correctly call init(Properties) on all
  instances.
