______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.66:

* XINS/Java Common Library:
  - Added ArrayIterator class.
  - Added FixedArraySet class.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.65:

* Improved descriptions for Library classes.

* XINS/Java Common Library:
  - Made ExpiryFolder class final instead of abstract.
  - Made ExpiryStrategy constructor public.
  - Fixed bug in LongUtils that cause all session-based functions to fail.
    This bug was introduced in release 0.63 (performance of session ID
    parsing).

* XINS/Java Server Framework
  - Now using ExpiryFolder for storage of sessions. They still don't expiry
    yet, though.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.64:

* Added Library class to both XINS/Java Client Framework and to the XINS/Java
  Common Library

* XINS/Java Servlet Framework:
  - Initializing at startup.
  - Extra state checks in API class.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.63:

* XINS/Java Server Framework:
  - Optimized generated java-fundament classes.
  - Improved performance of session ID parsing.
  - Deprecated NoSuchActualFunctionCallerException.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.62:

* Removed deprecated class org.xins.server.RemoteAPI.

* Fixed bug in output of _GetStatistics that caused total unsuccessful
  duration to be displayed as last unsuccessful duration.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.61:

* Improved generated CAPI classes. This includes a fix for unsuccessful call
  results. These now actually cause an UnsuccessfulCallException.

* XINS/Java Server Framework:
  - Synchronizing on sessions so a single session cannot be used in 2
    functions in parallel.
  - Improved logging.

* Fixed bug in XSLT for generating CAPI classes.

* Improved output with result code MissingParameters.
  Instead of outputting the following (pre-0.61):

     <result success="false" code="MissingParameters" />

  the output would now be, for example:

     <result success="false" code="MissingParameters">
        <data>
           <missing-param name="account"/>
           <missing-param name="password"/>
        </data>
     </result>

* Improved output with result code InvalidParameters.
  Instead of outputting for example the following (pre-0.61):

     <result success="false" code="InvalidParameters" />

  the output would now be, for example:

     <result success="false" code="InvalidParameters">
        <data>
           <invalid-value-for-type param="password" type="password"/>
        </data>
     </result>

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.60:

* Improved automatic generation of session identifiers in API implementation.
  Now marking functions that create session IDs with the attribute
  createsSession='true'.

* Automatically determining XINS version when generating Javadoc API docs.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.59:

* Replaced 'classes-capi-XXX' targets with 'jar-capi-XXX' targets.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.58:

* Fixed bug in generated Java CAPI classes. Now correctly sending session ID
  with session-based function calls.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.57:

* Introduced quite some changes in the type classes in XINS/Java Common
  Library.

* Improved session ID generation in XINS/Java Server Framework. Session ID now
  has the following format: xxxx:yyyy, where xxxx is a 16-digit hex string
  representing the startup time of the API, and yyyy is a 16-digit hex string
  representing a counter. Example value: "000000f622238ca6:0000000000000000".

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.56:

* Slightly improved logging in XINS/Java Server Framework:

* Improved generated CAPI classes, now support sessions.

* Test forms now display a SELECT box for booleans with the options: empty,
  'true' and 'false'.

* In generated specified documentation: No longer displaying standard result
  code as acronym.

* Removed (unused) support for 'dependson' tags in the function
  specifications.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.55:

* XINS/Java Server Framework:
  - Improved logging.
  - Improved initialization and shutdown of XINS/Java Server Framework. Added
    Singleton interface and InitializationException.
  - Slightly improved performance of detection of missing or unknown session
    ID in XINS/Java Server Framework.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.54:

* XINS/Java Server Framework:
  - Fixed bug in CallContext.getSession().
  - Relying on APIServlet.destroy() to call API.destroy() at shutdown. Removed
    shutdown handler from API class.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.53:

* Upgraded to JDOM 1.0b9.

* XINS/Java Server Framework:
  - Added getAttribute(String), setAttribute(String,String) and touch() to
    class Session.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.52:

* XINS/Java Server Framework: Added session support.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.51:

* XINS/Java Common Library: Added class FastStack.

* XINS/Java Server Framework:
  - Performing initialization in a compiler-safe method. If an instance has
    not init(Properties) method, this will be logged and ignored.
  - Performing deinitialization at shutdown using a destroy() method in the
    instances registered with an API.
  - Duplicate attributes per element are now checked.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.50:

* Added ResponseValidator to XINS/Java Server Framework. Duplicate parameters
  are now detected and properly cause a failure.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.49:

* Fixed bug in link to pattern test form (for pattern types).

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.48:

* Hid some of the protected interface of CallTargetGroup, because only classes
  in the same package can derive from this class.

* Fixed bug in statistics output, produced by function _GetStatistics.
  Previously the output was like this (incorrect):

     <function name="Login">
        <successful count="1" average="351">
           <min start="351" duration="351"/>
           <max start="1056118455354" duration="351"/>
           <last start="1056118455354" duration="351"/>
        </successful>
        <unsuccessful count="1" average="6">
           <min duration="6"/>
           <max duration="6"/>
           <last start="1056119178887" duration="6"/>
        </unsuccessful>
     </function>

  Now the output will be like this (correct):

     <function name="Login">
        <successful count="1" average="351">
           <min start="1056118455354" duration="351"/>
           <max start="1056118455354" duration="351"/>
           <last start="1056118455354" duration="351"/>
        </successful>
        <unsuccessful count="1" average="6">
           <min start="1056119178887" duration="6"/>
           <max start="1056119178887" duration="6"/>
           <last start="1056119178887" duration="6"/>
        </unsuccessful>
     </function>

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.47:

* Added 'Caller' demo program. Use target 'demo-caller' to execute it, specify
* the request file and the config file, for example:

     $ ant demo-caller -Drequest=request.xml -Dconfig=config.xml

  with config.xml for example as follows:

     <group type="ordered">
        <group type="random">
           <api url="http://127.0.0.1:22/"    />
           <api url="http://127.0.0.1:80/"    />
           <api url="http://127.0.0.1:30002/api" />
        </group>
        <group type="random">
           <api url="http://localhost:30004/api" />
           <api url="http://localhost:30005/api" />
        </group>
     </group>

  and request.xml for example as follows:

     <request function="_GetFunctionList" />

* XINS/Java Client Framework:
  - Introduced CallRequest and CallRequestParser.
  - Changed FunctionCaller interface to accept a CallRequest.
  - Implementated RandomCallTargetGroup and OrderedCallTargetGroup.
  - Removed RoundRobinCallTargetGroup, it is not used.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.46:

* Added first (limited) set of unit tests.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.45:

* XINS/Java Client Framework: Introduced FunctionCallerParser that parses an
  XML configuration document that defines CallTargetGroups and
  ActualFunctionCallers. An example of such a configuration is:

      <group type="ordered">
         <group type="round robin">
            <api url="http://apihost0.company.com:2087/auth.pl" />
            <api url="http://apihost1.company.com:2087/auth.pl" />
         </group>
         <api url="http://ext-apihost1.company.com:2088/auth.pl" />
      </group>

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.44:

* Major change to the way ActualFunctionCaller works: DNS lookups are now
  performed at construction time. No longer are DNS names accepted that
  resolve to multiple IP addresses. Use CallTargetGroups for this.

* Fixed problem in specdocs/type_to_html.xslt. It used the template
  'urlencode' without including urlencode.xslt.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.43:

* AbstractCompositeFunctionCaller now actually implements
  CompositeFunctionCaller. This fixes a bug in CallTargetGroup, method
  getActualCallTarget(String).

* Added RandomCallTargetGroup and RoundRobinCallTargetGroup classes (no-op).

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.42:

(none)

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.41:

* Fixed the 'xins' shell script to work on non-FreeBSD operating systems. Only
  using 'mktemp' on FreeBSD, using an unsafer method of creating temporary
  files on other unices.

* Fixed XSLT error in src/xslt/specdocs/type_to_html.xslt.

* Slightly improved 'javadoc' target in XINS build file

* Extended XINS/Java Client Framework:
  - Added support for sessions.
  - Renamed class RemoteAPI to ActualFunctionCaller. Deprecated RemoteAPI.
  - Added class AbstractFunctionCaller.
  - ActualFunctionCaller now extends AbstractFunctionCaller.
  - Added class AbstractCompositeFunctionCaller (extends
    AbstractFunctionCaller).
  - Added class CallTargetGroup (extends AbstractCompositeFunctionCaller).

* Improved performance of HTTPRequester (used by RemoteAPI /
  ActualFunctionCaller) by switching to using an unsynchronized
  FastStringBuffer instead of the normal synchronized StringBuffer.

* Improved performance of MandatoryArgumentChecker by letting
  MissingArgumentException use FastStringBuffer instead of StringBuffer.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.40:

* Properly encoding plus characters ('+') while URL encoding the link to the
  test form for a type.

* Storing (un)successful min/maximum start timestamp and displaying it in the
  result of _GetStatistics. In the old situation, the output was similar to
  this:

      <data>
         <function name="MyFunction">
            <successful count="124" average="132" min="13" max="830">
               <last start="1055333674847" duration="196" />
            </successful>
            <unsuccessful count="9" average="244" min="94" max="340">
               <last start="1055333620172" duration="250" />
            </successful>
         </function>
      </data>

  In the new situation the output is similar to this:

      <data>
         <function name="MyFunction">
            <successful count="124" average="132">
               <min start="1055332820374" duration="13" />
               <max start="1055330282035" duration="830" />
               <last start="1055333674847" duration="196" />
            </successful>
            <unsuccessful count="9" average="244">
               <min start="1055200307218" duration="94" />
               <max start="1055231843442" duration="340">
               <last start="1055333620172" duration="250" />
            </successful>
         </function>
      </data>

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.39:

* Made shell script 'xins' executable.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.38:

* Removed DataUnavailableException from XINS/Java Client Framework.

* Added standard types: _text, _boolean, _int8, _int16, _int32, _int64.

* Refactored some of the function_to_html.xslt files.

* Moved org.xins.types package to XINS/Java Common.

* The generated java-fundament classes now support Java data types other than
  String. This may break existing function ...Impl classes.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.37:

* Worked around the problem with Ant when calling 'xins -version'.

* Fixed 'xins -version' on Windows systems.

* Fixed problem: Included JAR files in bin package again.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.36:

* Renamed xins.sh to xins.

* Added CAPI targets for projects. CAPI stands for Client-side Application
  Programming Interface. Data sections are not supported yet though.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.35:

* Fixed some Checkstyle warnings.

* Added ExpiryValidator interface to xins-common.

* Added RemoteAPI to xins-client-framework.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.34:

* Fixed XINS-based project build problems introduced in 0.33.

* Generating separate xins-common.jar.

* Introduced ExpiryFolder (untested).

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.33:

* Renamed xins.jar to xins-server.jar.

* Added XINS/Java Client Framework. Translates into a xins-client.jar.

* Having groups in the Javadoc API documentation set.

* Added JDOM 1.0b8 to dependencies.

* Added HTTPRequester CollectionUtils classes in java-common.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.32:

* If a value for an input parameter is empty, then don't check the type for
  that parameter.

* Added shutdown hook. If the JVM is being shut down, then all request to
  regular functions will get an InternalError result code.

* Changed the names of the responder states to match the field names.

* Added support for generating Javadoc API docs per XINS API.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.31:

* Fixed bug in CallContext.endResponse(). If it was called more than once,
  then it would throw an exception.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.30:

* Fixed bug in CallContext.fail(ResultCode).

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.29:

* Responder: Added method fail(ResultCode).

* Upgraded xmlenc to release 0.33.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.28:

* FastStringBuffer: Supporting appending byte, short, int, long, float and
  double numbers.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.27:

* Disabled deprecation warnings and debug info when building a release.

* Enabled javac optimizations.

* Switched from Checkstyle 2.x to Checkstyle 3.0.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.26:

* Storing links to result codes in API instance.

* Code cleanup.

* In function specification documentation:
  - Only displaying result code in example if there is one.
  - Showing and linking to API result codes.
  - Renamed 'code' attribute to 'name' in resultcode-ref element type.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.25:

* Fixed bug introduced in 0.23 that causes all functions declared in the API
  to be invisible.

* Code cleanup.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.24:

* Separating words with an underscore in generated name of result code in API
  class.

* Removed class DefaultReturnCodes (deprecated since 0.15).

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.23:

* Generating static final fields for result codes in API class.

* Using Singleton pattern for API subclasses.

* ResultCode class is now public.

* Cleaned up generated code in the API class.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.22:

* Improved message when logging succeeded calls.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.21:

* Fixed bug in successful call logging.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.20:

* Cleaned up fallback initialization of Log4J.

* Class APIServlet directly implements Servlet interface, no longer derives
  from HttpServlet class.

* Fixed bug: Also logging successful calls again.

* Result codes are now in external .rcd files.

* Changed term 'return code' to 'result code' in quite some locations.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.19:

* Fixed NPE in CallContext.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.18:

* Logging different types of InvalidParameters errors.

* Linking to Jakarta Commons Logging API documentation.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.17:

* Greatly improved logging. Using Jakarta Commons library. Added it to the
  dependencies.

* Moved handleCall(CallContext) from API class to
  Function class.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.16:

* Fixed problem introduced in 0.15 that keeps the generated java-fundament
  code from compiling.

* Made _log field in the Function class available to subclasses.

* Logging missing parameters.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.15:

* Javadoc API documentation now links to Log4J API documentation.

* Added startResponse(boolean) and startResponse(ResultCode) to replace the
  now deprectated startResponse(boolean,String).

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.14:

* The files CHANGES, COPYRIGHT and README are now in both distribution files.

* Supporting associating returncodes with an API.

* Refactored parameter getting and checking: Moved the functionality from API
  class to Function class, to the handleCall(CallContext) method.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.13:

* Added function _GetSettings that returns the initialization settings.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.12:

* Putting dependencies in source distro.

* Refactored statistics-related code.

* Putting current time in function _GetStatistics output.

* Fixed bug, now resetting success indication and return code.

* Logging function calls.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.11:

* Supporting _function as the parameter specifying the function name.

* Version of xmlenc now in _GetVersion function output.

* Configuring Log4J to print to the console if no configuration is specified
  in the servlet inititialization properties

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.10:

* Generating private Javadoc API documentation.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.9:

* Improved Javadoc documentation.

* Added support for Checkstyle 2.x. See: http://checkstyle.sourceforge.net/

* Returning XINS version from function _GetVersion, not from _GetStatistics
  anymore.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.8:

* Pooling CallContext instances per thread.

* Using custom FastStringWriter for improved performance.

* Including XINS version in output of generic function _GetStatistics.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.7:

* Refactorings applied to create less objects during a function call.

* Flushing output stream in APIServlet instead of API class.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.6:

* Keeping track of last successful and last unsuccessful call start and
  duration times. Returning these from _GetStatistics.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.5:

* Copying resources from source directory to classes/ directory in WAR file.
  This is useful for resources like .properties and .xml files.

* Fixed bug: Skeleton .java files are now actually generated.

* Refactored quite some code in the API, Function and CallContext classes.

* Gathering statistics, which can be retrieved by calling _GetStatistics.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.4:

* Only generating files if the concerning APIs, function and types are
  explicitly mentioned in the concerning lists in xins-project.xml or api.xml.

* Generating skeleton .java files if function implementation files do not
  exist.

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.3:

* Now including dependency JAR files in generated JAR file (xins.jar)

______________________________________________________________________________
CHANGES INTRODUCED IN XINS 0.2:

* Generated APIImpl classes now correctly call init(Properties) on all
  instances.
