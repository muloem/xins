$Id$

This file lists the planned changes for XINS.


______________________________________________________________________________
XINS PROTOCOL AND SPECIFICATION FORMAT

* Result codes should be allowed to have their own specification for output
  parameters and data section.
* Add standard type '_date'.
* Consider allowing a default value to be specified for an input parameter.
  Perhaps this should be specified for a specific implementation instead of
  in the specification.
* Remove 'success' attribute from 'result' element. The existence of the
  'code' attribute indicates an error while the absence indicates success.
* Support API inheritance.
* Define regular expression for input parameter names.

______________________________________________________________________________
XINS/JAVA SERVER FRAMEWORK

* Change implementation of meta-functions from one method per meta-function to
  one class per meta-function.
* Include the timezone in every message that contains a time.
* Change the function performance logging to the logdoc-approach.
* A new maximum call duration (for a specific function) could be logged.
* CallContext should not rely on CallResultBuilder but implement the
  CallResult interface self.
* CallContext.getCallResult() should either be removed or it should return
  'this'.
* Check state transitions in APIServlet class.
* Set state in API class using private setState(State) method.
* Check state transitions in API class.
* Per State in the APIServlet and API classes define what a valid next state
  is. Change the setState(State) methods to check this.
* Support returning of call ID in function output, as an output parameter
  named '_callID'.
* CallResultBuilder should perhaps not implement CallResult.
* If an invalid value is passed for an input parameter of type _properties,
  the InternalError result code is returned instead of an InvalidParameters.
* Generated Javadoc should include package-private and private members.
* Log an INFO message if some runtime properties are unused.
* Implement a _ResetStatistics function.
* Implement a _DumpStatistics function that writes the statistics in a comma
  separated line in a text file.
* Number all requests and log this number with all or most log messages.
* Make generated logdoc classes package-private.
* Create an apart Statistics object that would contain the statistics and
  the methods to update them.
* Stop runtime configuration file watch thread when the servlet is disposed.
* Access control rules: Make default behaviour to deny requests. We should
  then be able to remove log message 4033.

______________________________________________________________________________
XINS/JAVA CLIENT FRAMEWORK

* Convert to logdoc-approach.
* Support non-200 HTTP return codes.
* Replace FunctionCaller / ActualFunctionCaller / CallTargetGroup hierarchy
  with Service-based solution, implemented in XINS/Java Common Library,
  package org.xins.util.service.
* Add method getRemoteSettings() to class AbstractCAPI. Functionality: Calls
  _GetSettings and converts the result to a RemoteSettings object with build
  properties, runtime properties and system properties.
* Add class MultiCallResult that maps ActualFunctionCaller instances to a
  result. The result is either a CallException or a CallResult.
* Add multi-call functionality to CallTargetGroup.
* Create subclass of UnsuccessfulCallException for the InvalidParameters
  result code.
* Create subclass of UnsuccessfulCallException for the MissingParameters
  result code.
* Send "_function=<name>" instead of "function=<name>" as soon as all existing
  backends support this (in class XINSServiceCaller).
* Abandon JDOM completely, favour SAX for parsing and a custom Document Object
  Model implementation, where appropriate.
* Make sure that the XINSServiceCaller properly supports HTTP result codes
  other than 200. Document the behaviour. Redirects should probably not be
  followed, but this has to be determined.
* Use an IndexedMap in class XINSServiceCaller, for improved iteration
  performance.
* Throw an InvalidKeyException in class XINSServiceCaller, when and where
  appropriate.

______________________________________________________________________________
XINS/JAVA COMMON LIBRARY

* Convert to logdoc-approach.
* Make LDAPServiceCaller class correctly detect time-outs.
* Change Type class to add a 'version' property.
* Add DateType class to represent standard type '_date'. Add Date class to
  represent an actual date and make this the value class for the DateType.
* Change ExpiryFolder to allow retrieval of slot info.
* Add functionality to allow the retrieval of property names from a
  PropertyReader for which get(String) has not been called.
* Fix @return for method fromStringForOptional(String) in class
  org.xins.types.standard.Properties.
* Create an implementation of interface IndexedMap.

______________________________________________________________________________
LOGDOC

* Support making generated classes package-private.
* Allow locales for all logs to be set at once.
* Add AbstractLog class that defines getDomain() method.
* Add org.logdoc package with class LogCentral with method 'void
  registerLog(AbstractLog)' and 'AbstractLog getLogByDomain(String)'.
* Add the French translation in src/logdoc/translation-bundle-fr_FR.xml.
* Support element in log.xml to reserve an ID that was previously used. For
  example <reserve id="5002" />

______________________________________________________________________________
GENERATED SPECIFICATION DOCUMENTATION

* Display specified output parameters and data section per result code.
* Check all names using regular expressions.
* Make sure a result code does not clash with the default result codes.
* Have a page per environment with links to _GetVersion, _GetStatistics,
  _GetSettings, etc. Let the link on the page for an API link to that page.
* Link to CVSweb or ViewCVS.
* Generate an anchor for each input parameter, output parameter, element and
  attribute in the generated file for a function.
* On specification documentation page for a result code: Have a list of links
  to the functions that specify they may return the result code.
* Remove the dependency to version controllers.
* Use an image to indicate the inheritance relationship between one type and
  another.

______________________________________________________________________________
GENERATED TEST FORMS

* None

______________________________________________________________________________
GENERATED TYPE CLASSES

* None

______________________________________________________________________________
GENERATED XINS/JAVA SERVER FUNDAMENT CLASSES

* None

______________________________________________________________________________
GENERATED XINS/JAVA CLIENT CAPI CLASSES

* None

______________________________________________________________________________
MISCELLANEOUS

* The standard result codes should be documented online.
* A pattern test script should be provided on http://xins.sourceforge.net/.
* Finish SourceForgeUpload task to smoothen the release process by performing
  the following actions:
  - upload the distribution file(s) to ftp://upload.sourceforge.net/incoming/
  - create a release on the SourceForge site
  - add the corresponding file
  - set the type of the file to '.gz'
  - let SourceForge send a release notification e-mail
* Have DTD or XML Schema files and use these to check that the specification
  files are valid.
* Fix 'xins -projecthelp'.
* Add date to CHANGES file when a release is created. A (small) custom Ant
  task would need to be developed for this.
* Support the Freshmeat.net XML-RPC interface for notification of new
  releases.
* Add a target all ANT target -> war + specdocs + javadoc-api + javadoc-capi.
* Move as much as possible tasks from the xins shell scripts to ANT tasks.
* Refactor documentation.
* Merge the similar targets in build.xml (java-client, java-server, 
  -prepare-java-client, -prepare-java-server, -prepare-java-common).
* Link the javadoc to the correct XINS version on sourceforge.
* Update the <propertyfile> target to also update all the fields in
  .version.properties.
* Add a ANT target that creates given the name an empty XINS project.
* xslt & xml files should contain a description in their header.
* The ANT build file should be regenerated only if a source file have changed.

