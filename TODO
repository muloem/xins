$Id$

This file lists the planned changes for XINS.


______________________________________________________________________________
XINS PROTOCOL AND SPECIFICATION FORMAT

* Result codes should be allowed to have their own specification for output
  parameters and data section.
* Add standard type '_date'.
* Consider allowing a default value to be specified for an input parameter.
  Perhaps this should be specified for a specific implementation instead of
  in the specification.
* Remove 'success' attribute from 'result' element. The existence of the
  'code' attribute indicates an error while the absence indicates success.
* Support API inheritance.
* Define regular expression for input parameter names.

______________________________________________________________________________
XINS/JAVA SERVER FRAMEWORK

* Not log the timezone at startup, but include it in every message that
  contains a time.
* The used logging categories should stabilize and they should be documented
  properly and extensively.
* A specific category should be used for function performance logging.
* Log messages for a function should be logged to a category that excludes the
  'Impl' suffix.
* A new maximum call duration (for a specific function) should be logged.
* CallContext should not rely on CallResultBuilder but implement the
  CallResult interface self.
* CallContext.getCallResult() should either be removed or it should return
  'this'.
* Add state management to the LifespanManagers class.
* Set state in APIServlet and API classes using private setState(State) method
  that could check that the state transition is valid.
* Per State in the APIServlet and API classes define what a valid next state
  is. Change the setState(State) methods to check this.
* Support returning of call ID in function output, as an output parameter
  named '_callID'.
* Consider returning an HTTP error code if the call is unsuccessful.
* Consider initializing all LifespanManagers at once.
* CallResultBuilder should perhaps not implement CallResult.
* If an invalid value is passed for an input parameter of type _properties,
  the InternalError result code is returned instead of an InvalidParameters.
* If the state is not READY in the service method, then InternalError should
  be returned, with the error message in a parameter.

______________________________________________________________________________
XINS/JAVA CLIENT FRAMEWORK

* Support non-200 HTTP return codes.
* Replace FunctionCaller / ActualFunctionCaller / CallTargetGroup hierarchy
  with Service-based solution, implemented in XINS/Java Common Library,
  package org.xins.util.service.
* Add method getRemoteSettings() to class AbstractCAPI. Functionality: Calls
  _GetSettings and converts the result to a RemoteSettings object with build
  properties, runtime properties and system properties.
* In a list of APIs, there should not be two APIs with the same URL. Check
  that. Otherwise also the MD5 would be the same.
* Add class MultiCallResult that maps ActualFunctionCaller instances to a
  result. The result is either a CallException or a CallResult.
* Add multi-call functionality to CallTargetGroup.

______________________________________________________________________________
XINS/JAVA COMMON LIBRARY

* Change Type class to add a 'version' property.
* Add DateType class to represent standard type '_date'. Add Date class to
  represent an actual date and make this the value class for the DateType.
* Change ExpiryFolder to allow retrieval of slot info.

______________________________________________________________________________
GENERATED SPECIFICATION DOCUMENTATION

* Display specified output parameters and data section per result code.

______________________________________________________________________________
GENERATED TEST FORMS

* None

______________________________________________________________________________
GENERATED TYPE CLASSES

* None

______________________________________________________________________________
GENERATED XINS/JAVA SERVER FUNDAMENT CLASSES

* None

______________________________________________________________________________
GENERATED XINS/JAVA CLIENT CAPI CLASSES

* Add a method to the CAPI interface that provides functionality to determine
  what XINS version was used to generate the class.

______________________________________________________________________________
MISCELLANEOUS

* The standard result codes should be documented online.
* A pattern test script should be provided on http://xins.sourceforge.net/.
* Add a SourceForgeUpload task to smoothen the release process by uploading
  the distribution file(s) to ftp://upload.sourceforge.net/incoming/, then
  create a release on the SourceForge site, then add the corresponding file,
  then set the type of the file to 'tar.gz' and finally let SourceForge send
  the notification e-mail.
* Have DTD or XML Schema files and use these to check that the specification
  files are valid.
* Fix 'xins -projecthelp'.
* Consider removing dependency on JDOM.
